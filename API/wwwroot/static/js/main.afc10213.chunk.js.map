{"version":3,"sources":["app/models/pagination.ts","app/api/agent.ts","app/models/activity.ts","app/models/profile.ts","app/stores/activityStore.ts","app/stores/profileStore.ts","app/stores/userStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/commentStore.ts","app/layout/NavBar.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/activities/dashboard/ActivityListItemAttendee.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityFilters.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/commom/form/MyTextInput.tsx","features/users/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","app/layout/LoadingComponents.tsx","app/commom/form/MyTextArea.tsx","app/commom/form/MySelectInput.tsx","app/commom/options/categoryOptions.tsx","app/commom/form/MyDateInput.tsx","features/activities/form/ActivityForm.tsx","features/activities/details/ActivityDeteledHeader.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivitySideBar.tsx","features/activities/details/ActivityDetails.tsx","features/errors/TestError.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/commom/modals/ModalContainer.tsx","features/profiles/ProfileActivities.tsx","features/profiles/ProfileFollowing.tsx","app/commom/imageUpload/PhotoWidgetCropper.tsx","app/commom/imageUpload/PhotoWidgetDropzone.tsx","app/commom/imageUpload/PhotoUploadWiget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["PaginatedResult","data","pagination","this","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","JSON","parse","error","status","toast","method","errors","hasOwnProperty","history","push","modalStateErros","key","flat","setServerError","Promise","reject","responseBody","requests","url","get","then","body","post","put","delete","agent","Activities","list","params","details","id","create","acitivity","update","attend","Account","current","login","user","register","Profiles","username","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","updateFollowing","listFollwing","predicate","listActivities","Activity","init","Object","assign","ActivityFormValues","activity","undefined","title","category","description","date","city","venue","Profile","userName","displayName","image","ActivityStore","activityResgistry","Map","selectedActivity","editMode","loading","loadingInitial","pagingParams","set","setPagingParams","setPredicate","value","resetPredicate","forEach","loadActivities","axiosParams","result","setActivity","setPagination","setLoadingInitial","console","log","loadActivity","getActivity","runInAction","userStore","isGoing","attendees","some","isHost","hostUsername","toLowerCase","host","find","x","Date","state","createActivity","attendee","newActivity","updateActivity","updatedActivity","deleteActivity","updateAttendance","filter","cancelActivityToggle","isCanceled","clearSelectedActivity","updateAttendeeFollowing","following","followingCount","makeAutoObservable","reaction","keys","clear","URLSearchParams","toString","toISOString","Array","from","values","sort","b","getTime","entries","activitiesByDate","reduce","activities","format","ProfileStore","profile","loadingProfile","uploading","followings","loadingFollowings","activeTab","userActivities","loadingActivities","setActiveTab","loadProfile","photo","photos","isMain","setImage","p","activityStore","followersCount","loadFollowings","loadUserActivities","UserStore","creds","setToken","modalStore","closeModal","logout","window","localStorage","removeItem","getUser","getItem","appLoaded","setAppLoaded","setItem","modal","open","openModal","content","profileStore","commentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","catch","on","comment","createdAt","unshift","stopHubConnection","stop","clearComments","addComment","invoke","StoreContext","createContext","useStore","useContext","observer","Menu","inverted","fixed","Container","Item","as","NavLink","to","exact","header","src","alt","style","marginRight","name","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","Reveal","animated","Content","visible","width","fluid","color","hidden","basic","e","preventDefault","handleFollow","Card","Header","CardDescription","extra","Icon","styles","borderColor","borderWidth","List","horizontal","map","Popup","hoverable","trigger","size","circular","bordered","ActivityListItem","Segment","Group","Label","attached","textAlign","marginBottom","Description","secondary","clearing","floated","groupedActivities","group","sub","vertical","marginTop","active","has","onChange","ActivityListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","disabled","useState","loadingNext","setLoadingNext","useEffect","Grid","Column","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","Loader","MyTextInput","props","useField","field","meta","Form","Field","touched","label","initialValues","email","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","placeholder","type","render","ValidationErrors","Message","err","i","validationSchema","Yup","required","isValid","dirty","isLoggedIn","LoadingComponent","Dimmer","MyTextArea","MySelectInput","helpers","Select","clearable","options","d","setValue","onBlur","setTouched","categoryOptions","MyDateInput","selected","useHistory","useParams","nullable","enableReinitialize","uuid","handleFormSubmit","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","zIndex","top","ribbon","verticalAlign","border","resetForm","onKeyPress","shiftKey","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","length","relaxed","divided","Extra","TestErrors","widths","baseUrl","primary","NotFound","Inline","message","Modal","onClose","panes","menuItem","pane","Tab","Pane","menu","onTabChange","activeIndex","handleTabChange","itemsPerRow","objectFit","Meta","loagind","PhotoWidgetCropper","imagePreview","setCropper","initialAspectRatio","aspectRatio","preview","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoWidgetDropzone","setFiles","dzStyles","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadWidget","files","revokeObjectURL","overflow","getCroppedCanvas","toBlob","blob","isCurrentUser","addPhotoMode","setAddPhotoMode","target","setTarget","currentTarget","handleSetMainPhoto","handleDeletePhoto","ProfileFollowing","menuPosition","Statistic","Divider","PrivateRoute","Component","component","rest","location","useLocation","finally","hideProgressBar","path","HomePage","ActivityDashboard","ActivityDetails","ActivityForm","ProfilePage","ServerError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"+YAOaA,G,OAIX,WAAYC,EAASC,GAAyB,yBAH9CD,UAG6C,OAF7CC,gBAE6C,EAC3CC,KAAKF,KAAOA,EACZE,KAAKD,WAAaA,IAITE,EAIT,aAA0C,IAA9BC,EAA6B,uDAAhB,EAAGC,EAAa,uDAAF,EAAE,yBAHzCD,gBAGyC,OAFzCC,cAEyC,EACrCH,KAAKG,SAAWA,EAChBH,KAAKE,WAAaA,GCN1BE,IAAMC,SAASC,QAAUC,OAEzBH,IAAMI,aAAaC,QAAQC,KAAI,SAACC,GAC9B,IAAMC,EAAQC,EAAMC,YAAYF,MAEhC,OADIA,IAAOD,EAAOI,QAAQC,cAAf,iBAAyCJ,IAC7CD,KAGTP,IAAMI,aAAaS,SAASP,IAA5B,+BAAAQ,EAAA,MACE,WAAOD,GAAP,eAAAC,EAAA,iFAEQnB,EAAakB,EAASF,QAAT,YAFrB,uBAIIE,EAASnB,KAAO,IAAID,EAClBoB,EAASnB,KACTqB,KAAKC,MAAMrB,IANjB,kBAQWkB,GARX,gCAUSA,GAVT,2CADF,uDAaE,SAACI,GACC,MAAiCA,EAAMJ,SAA/BnB,EAAR,EAAQA,KAAMwB,EAAd,EAAcA,OAAQX,EAAtB,EAAsBA,OACtB,OAAQW,GACN,KAAK,IAOH,GANoB,kBAATxB,GACTyB,IAAMF,MAAMvB,GAEQ,QAAlBa,EAAOa,QAAoB1B,EAAK2B,OAAOC,eAAe,OACxDC,GAAQC,KAAK,cAEX9B,EAAK2B,OAAQ,CACf,IAAMI,EAAkB,GACxB,IAAK,IAAMC,KAAOhC,EAAK2B,OACjB3B,EAAK2B,OAAOK,IACdD,EAAgBD,KAAK9B,EAAK2B,OAAOK,IAGrC,MAAMD,EAAgBE,OAExB,MACF,KAAK,IACHR,IAAMF,MAAM,gBACZ,MACF,KAAK,IACHM,GAAQC,KAAK,cACb,MACF,KAAK,IACHf,EAAMC,YAAYkB,eAAelC,GACjC6B,GAAQC,KAAK,iBAGjB,OAAOK,QAAQC,OAAOb,MAI1B,IAAMc,EAAe,SAAIlB,GAAJ,OAAmCA,EAASnB,MAE3DsC,EACC,SAAIC,GAAJ,OAAoBjC,IAAMkC,IAAOD,GAAKE,KAAKJ,IAD5CC,EAEE,SAAIC,EAAaG,GAAjB,OACJpC,IAAMqC,KAAQJ,EAAKG,GAAMD,KAAKJ,IAH5BC,EAIC,SAAIC,EAAaG,GAAjB,OAA8BpC,IAAMsC,IAAOL,EAAKG,GAAMD,KAAKJ,IAJ5DC,EAKC,SAAIC,GAAJ,OAAoBjC,IAAMuC,OAAUN,GAAKE,KAAKJ,IAmDtCS,EAND,CACZC,WA3CiB,CACjBC,KAAM,SAACC,GAAD,OACJ3C,IACGkC,IAAiC,cAAe,CAAES,WAClDR,KAAKJ,IACVa,QAAS,SAACC,GAAD,OAAgBb,EAAA,sBAAsCa,KAC/DC,OAAQ,SAACC,GAAD,OACNf,EAAoB,cAAee,IACrCC,OAAQ,SAACD,GAAD,OACNf,EAAA,sBAAkCe,EAAUF,IAAME,IACpDR,OAAQ,SAACM,GAAD,OAAgBb,EAAA,sBAAkCa,KAC1DI,OAAQ,SAACJ,GAAD,OAAgBb,EAAA,sBAAmCa,EAAnC,WAAgD,MAiCxEK,QA9Bc,CACdC,QAAS,kBAAMnB,EAAmB,aAClCoB,MAAO,SAACC,GAAD,OAA0BrB,EAAoB,iBAAkBqB,IACvEC,SAAU,SAACD,GAAD,OACRrB,EAAoB,oBAAqBqB,KA2B3CE,SAxBe,CACfrB,IAAK,SAACsB,GAAD,OAAsBxB,EAAA,oBAAmCwB,KAC9DC,YAAa,SAACC,GACZ,IAAIC,EAAW,IAAIC,SAEnB,OADAD,EAASE,OAAO,OAAQH,GACjB1D,IAAMqC,KAAY,SAAUsB,EAAU,CAC3ChD,QAAS,CAAE,eAAgB,0BAG/BmD,aAAc,SAACjB,GAAD,OAAgBb,EAAA,kBAAyBa,EAAzB,YAAuC,KACrEkB,YAAa,SAAClB,GAAD,OAAgBb,EAAA,kBAAwBa,KACrDmB,gBAAiB,SAACR,GAAD,OACfxB,EAAA,kBAAyBwB,GAAY,KACvCS,aAAc,SAACT,EAAkBU,GAAnB,OACZlC,EAAA,kBAAmCwB,EAAnC,sBAAyDU,KAC3DC,eAAgB,SAACX,EAAkBU,GAAnB,OACdlC,EAAA,oBACewB,EADf,iCACgDU,OCvGvCE,EACX,WAAYC,GAA2B,oBACrCC,OAAOC,OAAO3E,KAAMyE,IAIXG,EASX,WAAYC,GAA+B,yBAR3C5B,QAAc6B,EAQ4B,KAP1CC,MAAgB,GAO0B,KAN1CC,SAAmB,GAMuB,KAL1CC,YAAsB,GAKoB,KAJ1CC,KAAoB,KAIsB,KAH1CC,KAAe,GAG2B,KAF1CC,MAAgB,GAGXP,IACD7E,KAAKiD,GAAK4B,EAAS5B,GACnBjD,KAAK+E,MAAQF,EAASE,MACtB/E,KAAKgF,SAAWH,EAASG,SACzBhF,KAAKiF,YAAcJ,EAASI,YAC5BjF,KAAKkF,KAAOL,EAASK,KACrBlF,KAAKoF,MAAQP,EAASO,MACtBpF,KAAKmF,KAAON,EAASM,O,SC5BdE,EACX,WAAY5B,GAAa,oBACvBzD,KAAK4D,SAAWH,EAAK6B,SACrBtF,KAAKuF,YAAc9B,EAAK8B,YACxBvF,KAAKwF,MAAQ/B,EAAK+B,OCTDC,E,WAUnB,aAAe,IAAD,gCATdC,kBAAoB,IAAIC,IASV,KARdC,sBAAyCd,EAQ3B,KAPde,UAAW,EAOG,KANdC,SAAU,EAMI,KALdC,gBAAiB,EAKH,KAJdhG,WAAgC,KAIlB,KAHdiG,aAAe,IAAI/F,EAGL,KAFdqE,WAAY,IAAIqB,KAAMM,IAAI,OAAO,GAEnB,KAadC,gBAAkB,SAACF,GACjB,EAAKA,aAAeA,GAdR,KAiBdG,aAAe,SAAC7B,EAAmB8B,GACjC,IAAMC,EAAiB,WACrB,EAAK/B,UAAUgC,SAAQ,SAACF,EAAOtE,GACjB,cAARA,GAAqB,EAAKwC,UAAU3B,OAAOb,OAGnD,OAAQwC,GACN,IAAK,MACH+B,IACA,EAAK/B,UAAU2B,IAAI,OAAO,GAC1B,MACF,IAAK,UACHI,IACA,EAAK/B,UAAU2B,IAAI,WAAW,GAC9B,MACF,IAAK,SACHI,IACA,EAAK/B,UAAU2B,IAAI,UAAU,GAC7B,MACF,IAAK,YACH,EAAK3B,UAAU3B,OAAO,aACtB,EAAK2B,UAAU2B,IAAI,YAAaG,KAtCxB,KA0EdG,eA1Ec,sBA0EG,4BAAArF,EAAA,6DACf,EAAK6E,gBAAiB,EADP,kBAGQnD,EAAMC,WAAWC,KAAK,EAAK0D,aAHnC,QAGPC,EAHO,QAIN3G,KAAKwG,SAAQ,SAACzB,GACnB,EAAK6B,YAAY7B,MAEnB,EAAK8B,cAAcF,EAAO1G,YAC1B,EAAK6G,mBAAkB,GARV,kDAUbC,QAAQC,IAAR,MACA,EAAKF,mBAAkB,GAXV,0DA1EH,KAyFdD,cAAgB,SAAC5G,GACf,EAAKA,WAAaA,GA1FN,KA6FdgH,aA7Fc,uCA6FC,WAAO9D,GAAP,eAAA/B,EAAA,2DACT2D,EAAW,EAAKmC,YAAY/D,IADnB,uBAGX,EAAK2C,iBAAmBf,EAHb,kBAIJA,GAJI,cAMX,EAAKkB,gBAAiB,EANX,mBAQQnD,EAAMC,WAAWG,QAAQC,GARjC,eAQT4B,EARS,OAST,EAAK6B,YAAY7B,GACjBoC,aAAY,WACV,EAAKrB,iBAAmBf,KAE1B,EAAK+B,mBAAkB,GAbd,kBAcF/B,GAdE,kCAgBTgC,QAAQC,IAAR,MACA,EAAKF,mBAAkB,GAjBd,0DA7FD,2DAmHNF,YAAc,SAAC7B,GACrB,IAEU,EAFJpB,EAAO5C,EAAMqG,UAAUzD,KAEzBA,IACFoB,EAASsC,QAAUtC,EAASuC,UAAWC,MACrC,SAACnG,GAAD,OAAOA,EAAEqE,cAAgB9B,EAAK8B,eAEhCV,EAASyC,OACPzC,EAAS0C,eAAiB9D,EAAK8B,YAAYiC,cAC7C3C,EAAS4C,KAAT,UAAgB5C,EAASuC,iBAAzB,aAAgB,EAAoBM,MAClC,SAACC,GAAD,OAAOA,EAAE/D,WAAaiB,EAAS0C,iBAGnC1C,EAASK,KAAO,IAAI0C,KAAK/C,EAASK,MAClC,EAAKQ,kBAAkBO,IAAIpB,EAAS5B,GAAI4B,IAjI5B,KAoINmC,YAAc,SAAC/D,GACrB,OAAO,EAAKyC,kBAAkBpD,IAAIW,IArItB,KAwId2D,kBAAoB,SAACiB,GACnB,EAAK9B,eAAiB8B,GAzIV,KA4IdC,eA5Ic,uCA4IG,WAAOjD,GAAP,mBAAA3D,EAAA,6DACTuC,EAAO5C,EAAMqG,UAAUzD,KACvBsE,EAAW,IAAI1C,EAAQ5B,GAFd,kBAIPb,EAAMC,WAAWK,OAAO2B,GAJjB,QAKPmD,EAAc,IAAIxD,EAASK,IACrB0C,aAAe9D,EAAM6B,SACjC0C,EAAYZ,UAAY,CAACW,GACzB,EAAKrB,YAAYsB,GACjBf,aAAY,WACV,EAAKrB,iBAAmBoC,KAVb,kDAabnB,QAAQC,IAAR,MAba,0DA5IH,2DA6JdmB,eA7Jc,uCA6JG,WAAOpD,GAAP,SAAA3D,EAAA,+EAEP0B,EAAMC,WAAWO,OAAOyB,GAFjB,OAGboC,aAAY,WACV,GAAIpC,EAAS5B,GAAI,CACf,IAAIiF,EAAe,2BACd,EAAKlB,YAAYnC,EAAS5B,KAC1B4B,GAEL,EAAKa,kBAAkBO,IAAIpB,EAAS5B,GAAIiF,GACxC,EAAKtC,iBAAmBsC,MAVf,+CAcbrB,QAAQC,IAAR,MAda,wDA7JH,2DA+KdqB,eA/Kc,uCA+KG,WAAOlF,GAAP,SAAA/B,EAAA,6DACf,EAAK4E,SAAU,EADA,kBAGPlD,EAAMC,WAAWF,OAAOM,GAHjB,OAIbgE,aAAY,WACV,EAAKvB,kBAAkB/C,OAAOM,GAC9B,EAAK6C,SAAU,KANJ,gDASbe,QAAQC,IAAR,MACAG,aAAY,WACV,EAAKnB,SAAU,KAXJ,yDA/KH,2DA+LdsC,iBA/Lc,sBA+LK,4BAAAlH,EAAA,6DACXuC,EAAO5C,EAAMqG,UAAUzD,KAC7B,EAAKqC,SAAU,EAFE,kBAITlD,EAAMC,WAAWQ,OAAO,EAAKuC,iBAAkB3C,IAJtC,OAKfgE,aAAY,WAAO,IAAD,EAChB,aAAI,EAAKrB,wBAAT,aAAI,EAAuBuB,QAAS,CAAC,IAAD,IAClC,EAAKvB,iBAAiBwB,UAAtB,UACE,EAAKxB,iBAAiBwB,iBADxB,iBACE,EAAiCiB,cADnC,aACE,UACE,SAACnH,GAAD,OAAOA,EAAE0C,YAAF,OAAeH,QAAf,IAAeA,OAAf,EAAeA,EAAM6B,aAEhC,EAAKM,iBAAiBuB,SAAU,MAC3B,CAAC,IAAD,IACCY,EAAW,IAAI1C,EAAQ5B,GAC7B,YAAKmC,wBAAL,mBAAuBwB,iBAAvB,SAAkCxF,KAAKmG,GACvC,EAAKnC,iBAAkBuB,SAAU,EAEnC,EAAKzB,kBAAkBO,IACrB,EAAKL,iBAAkB3C,GACvB,EAAK2C,qBAnBM,yEAwBfqB,aAAY,kBAAO,EAAKnB,SAAU,KAxBnB,4EA/LL,KA2NdwC,qBA3Nc,sBA2NS,sBAAApH,EAAA,6DACrB,EAAK4E,SAAU,EADM,kBAGblD,EAAMC,WAAWQ,OAAO,EAAKuC,iBAAkB3C,IAHlC,OAInBgE,aAAY,WAAO,IAAD,EAChB,EAAKrB,iBAAkB2C,aAAa,UAAC,EAAK3C,wBAAN,aAAC,EAAuB2C,YAC5D,EAAK7C,kBAAkBO,IACrB,EAAKL,iBAAkB3C,GACvB,EAAK2C,qBARU,gDAYnBiB,QAAQC,IAAR,MAZmB,yBAcnBG,aAAY,kBAAO,EAAKnB,SAAU,KAdf,4EA3NT,KA6Od0C,sBAAwB,WACtB,EAAK5C,sBAAmBd,GA9OZ,KAiPd2D,wBAA0B,SAAC7E,GACzB,EAAK8B,kBAAkBY,SAAQ,SAACzB,GAC9BA,EAASuC,UAAUd,SAAQ,SAACyB,GACtBA,EAASnE,WAAaA,IACxBmE,EAASW,UACLX,EAASY,iBACTZ,EAASY,iBACbZ,EAASW,WAAaX,EAASW,kBAvPrCE,YAAmB5I,MAEnB6I,aACE,kBAAM,EAAKvE,UAAUwE,UACrB,WACE,EAAK9C,aAAe,IAAI/F,EACxB,EAAKyF,kBAAkBqD,QACvB,EAAKxC,oB,6CAkCX,WACE,IAAMxD,EAAS,IAAIiG,gBAUnB,OATAjG,EAAOkB,OAAO,aAAcjE,KAAKgG,aAAa9F,WAAW+I,YACzDlG,EAAOkB,OAAO,WAAYjE,KAAKgG,aAAa7F,SAAS8I,YACrDjJ,KAAKsE,UAAUgC,SAAQ,SAACF,EAAOtE,GACjB,cAARA,EACFiB,EAAOkB,OAAOnC,EAAMsE,EAAe8C,eAEnCnG,EAAOkB,OAAOnC,EAAKsE,MAGhBrD,I,4BAGT,WACE,OAAOoG,MAAMC,KAAKpJ,KAAK0F,kBAAkB2D,UAAUC,MACjD,SAACpI,EAAGqI,GAAJ,OAAUrI,EAAEgE,KAAMsE,UAAYD,EAAErE,KAAMsE,e,6BAI1C,WACE,OAAO9E,OAAO+E,QACZzJ,KAAK0J,iBAAiBC,QAAO,SAACC,EAAY/E,GACxC,IAAMK,EAAO2E,kBAAOhF,EAASK,KAAO,eAIpC,OAHA0E,EAAW1E,GAAQ0E,EAAW1E,GAAX,sBACX0E,EAAW1E,IADA,CACOL,IACtB,CAACA,GACE+E,IACN,S,cCnFYE,E,WAWnB,aAAe,IAAD,gCAVdC,QAA0B,KAUZ,KATdC,gBAAiB,EASH,KARdC,WAAY,EAQE,KAPdnE,SAAU,EAOI,KANdoE,WAAwB,GAMV,KALdC,mBAAoB,EAKN,KAJdC,UAAY,EAIE,KAHdC,eAAiC,GAGnB,KAFdC,mBAAoB,EAEN,KAgBdC,aAAe,SAACH,GACd,EAAKA,UAAYA,GAjBL,KA2BdI,YA3Bc,uCA2BA,WAAO5G,GAAP,eAAA1C,EAAA,6DACZ,EAAK8I,gBAAiB,EADV,kBAGYpH,EAAMe,SAASrB,IAAIsB,GAH/B,OAGJmG,EAHI,OAIV9C,aAAY,WACV,EAAK8C,QAAUA,EACf,EAAKC,gBAAiB,KANd,gDASVnD,QAAQC,IAAR,MACAG,aAAY,kBAAO,EAAK+C,gBAAiB,KAV/B,yDA3BA,2DAyCdnG,YAzCc,uCAyCA,WAAOC,GAAP,iBAAA5C,EAAA,6DACZ,EAAK+I,WAAY,EADL,kBAGarH,EAAMe,SAASE,YAAYC,GAHxC,OAGJ7C,EAHI,OAIJwJ,EAAQxJ,EAASnB,KACvBmH,aAAY,WACS,IAAD,EAAd,EAAK8C,UACP,YAAKA,QAAQW,cAAb,SAAqB9I,KAAK6I,GACtBA,EAAME,QAAU9J,EAAMqG,UAAUzD,OAClC5C,EAAMqG,UAAU0D,SAASH,EAAMpI,KAC/B,EAAK0H,QAAQvE,MAAQiF,EAAMpI,MAG/B,EAAK4H,WAAY,KAbT,gDAgBVpD,QAAQC,IAAR,MACAG,aAAY,kBAAO,EAAKgD,WAAY,KAjB1B,yDAzCA,2DA8Dd/F,aA9Dc,uCA8DC,WAAOuG,GAAP,SAAAvJ,EAAA,6DACb,EAAK4E,SAAU,EADF,kBAGLlD,EAAMe,SAASO,aAAauG,EAAMxH,IAH7B,OAIXpC,EAAMqG,UAAU0D,SAASH,EAAMpI,KAC/B4E,aAAY,WACN,EAAK8C,SAAW,EAAKA,QAAQW,SAC/B,EAAKX,QAAQW,OAAOhD,MAAK,SAACmD,GAAD,OAAOA,EAAEF,UAASA,QAAS,EACpD,EAAKZ,QAAQW,OAAOhD,MAAK,SAACmD,GAAD,OAAOA,EAAE5H,KAAOwH,EAAMxH,MAAK0H,QAAS,EAC7D,EAAKZ,QAAQvE,MAAQiF,EAAMpI,IAC3B,EAAKyD,SAAU,MAVR,gDAcXmB,aAAY,kBAAO,EAAKnB,SAAU,KAClCe,QAAQC,IAAR,MAfW,yDA9DD,2DAiFd3C,YAjFc,uCAiFA,WAAOsG,GAAP,SAAAvJ,EAAA,6DACZ,EAAK4E,SAAU,EADH,kBAGJlD,EAAMe,SAASQ,YAAYsG,EAAMxH,IAH7B,OAIVgE,aAAY,WACS,IAAD,EAAd,EAAK8C,UACP,EAAKA,QAAQW,OAAb,UAAsB,EAAKX,QAAQW,cAAnC,aAAsB,EAAqBrC,QACzC,SAACwC,GAAD,OAAOA,EAAE5H,KAAOwH,EAAMxH,MAExB,EAAK6C,SAAU,MATT,gDAaVmB,aAAY,kBAAO,EAAKnB,SAAU,KAClCe,QAAQC,IAAR,MAdU,yDAjFA,2DAmGd1C,gBAnGc,uCAmGI,WAAOR,EAAkB8E,GAAzB,SAAAxH,EAAA,6DAChB,EAAK4E,SAAU,EADC,kBAGRlD,EAAMe,SAASS,gBAAgBR,GAHvB,OAId/C,EAAMiK,cAAcrC,wBAAwB7E,GAC5CqD,aAAY,WAAO,IAAD,IAEd,EAAK8C,SACL,EAAKA,QAAQnG,YAAb,UAA0B/C,EAAMqG,UAAUzD,YAA1C,aAA0B,EAAsB6B,WAChD,EAAKyE,QAAQnG,WAAaA,IAE1B8E,EACI,EAAKqB,QAAQgB,iBACb,EAAKhB,QAAQgB,iBACjB,EAAKhB,QAAQrB,WAAa,EAAKqB,QAAQrB,WAGvC,EAAKqB,SACL,EAAKA,QAAQnG,YAAb,UAA0B/C,EAAMqG,UAAUzD,YAA1C,aAA0B,EAAsB6B,YAEhDoD,EACI,EAAKqB,QAAQpB,iBACb,EAAKoB,QAAQpB,kBAEnB,EAAKuB,WAAW5D,SAAQ,SAACyD,GACnBA,EAAQnG,WAAaA,IACvBmG,EAAQrB,UACJqB,EAAQgB,iBACRhB,EAAQgB,iBACZhB,EAAQrB,WAAaqB,EAAQrB,cAGjC,EAAK5C,SAAU,KAhCH,gDAmCde,QAAQC,IAAR,MACAG,aAAY,kBAAO,EAAKnB,SAAU,KApCpB,yDAnGJ,6DA2IdkF,eA3Ic,uCA2IG,WAAO1G,GAAP,eAAApD,EAAA,6DACf,EAAKiJ,mBAAoB,EADV,kBAGYvH,EAAMe,SAASU,aACtC,EAAK0F,QAASnG,SACdU,GALW,OAGP4F,EAHO,OAObjD,aAAY,WACV,EAAKiD,WAAaA,EAClB,EAAKC,mBAAoB,KATd,gDAYbtD,QAAQC,IAAR,MACAG,aAAY,kBAAO,EAAKkD,mBAAoB,KAb/B,yDA3IH,2DA4Jdc,mBA5Jc,uCA4JO,WAAOrH,EAAkBU,GAAzB,eAAApD,EAAA,6DACnB,EAAKoJ,mBAAoB,EADN,kBAGQ1H,EAAMe,SAASY,eACtCX,EACAU,GALe,OAGXsF,EAHW,OAOjB3C,aAAY,WACV,EAAKoD,eAAiBT,EACtB,EAAKU,mBAAoB,KATV,gDAYjBzD,QAAQC,IAAR,MACAG,aAAY,WACV,EAAKqD,mBAAoB,KAdV,yDA5JP,wDACZ1B,YAAmB5I,MAEnB6I,aACE,kBAAM,EAAKuB,aACX,SAACA,GACC,GAAkB,IAAdA,GAAsC,IAAnB,EAAKA,UAAiB,CAC3C,IAAM9F,EAA0B,IAAd8F,EAAkB,YAAc,YAClD,EAAKY,eAAe1G,QAEpB,EAAK4F,WAAa,M,+CAU1B,WACE,SAAIrJ,EAAMqG,UAAUzD,OAAQzD,KAAK+J,UACxBlJ,EAAMqG,UAAUzD,KAAK6B,WAAatF,KAAK+J,QAAQnG,a,KChCvCsH,E,WAGnB,aAAe,IAAD,gCAFdzH,KAAoB,KAEN,KAQdD,MARc,uCAQN,WAAO2H,GAAP,eAAAjK,EAAA,+EAEe0B,EAAMU,QAAQE,MAAM2H,GAFnC,OAEE1H,EAFF,OAGJ5C,EAAMC,YAAYsK,SAAS3H,EAAK7C,OAChCqG,aAAY,kBAAO,EAAKxD,KAAOA,KAC/B9B,GAAQC,KAAK,eACbf,EAAMwK,WAAWC,aANb,uHARM,2DAoBdC,OAAS,WACP1K,EAAMC,YAAYsK,SAAS,MAC3BI,OAAOC,aAAaC,WAAW,OAC/B,EAAKjI,KAAO,KACZ9B,GAAQC,KAAK,MAxBD,KA2Bd+J,QA3Bc,sBA2BJ,4BAAAzK,EAAA,+EAEa0B,EAAMU,QAAQC,UAF3B,OAEAE,EAFA,OAGNwD,aAAY,kBAAO,EAAKxD,KAAOA,KAHzB,gDAKNoD,QAAQC,IAAR,MALM,yDA3BI,KAoCdpD,SApCc,uCAoCH,WAAOyH,GAAP,eAAAjK,EAAA,+EAEY0B,EAAMU,QAAQI,SAASyH,GAFnC,OAED1H,EAFC,OAGP5C,EAAMC,YAAYsK,SAAS3H,EAAK7C,OAChCqG,aAAY,kBAAO,EAAKxD,KAAOA,KAC/B9B,GAAQC,KAAK,eACbf,EAAMwK,WAAWC,aANV,uHApCG,2DAgDdV,SAAW,SAACpF,GACN,EAAK/B,OAAM,EAAKA,KAAK+B,MAAQA,IAhDjCoD,YAAmB5I,M,4CAGrB,WACE,QAASA,KAAKyD,S,KCGL5C,EAAe,CAC1BiK,cAAe,IAAIrF,EACnB3E,YAAa,ICXb,aAAe,IAAD,gCAJdO,MAA4B,KAId,KAHdT,MAAuB4K,OAAOC,aAAaG,QAAQ,OAGrC,KAFdC,WAAY,EAEE,KAed7J,eAAiB,SAACX,GAChB,EAAKA,MAAQA,GAhBD,KAmBd+J,SAAW,SAACxK,GACV,EAAKA,MAAQA,GApBD,KAuBdkL,aAAe,WACb,EAAKD,WAAY,GAvBjBjD,YAAmB5I,MAEnB6I,aACE,kBAAM,EAAKjI,SACX,SAACA,GACKA,EACF4K,OAAOC,aAAaM,QAAQ,MAAOnL,GAEnC4K,OAAOC,aAAaC,WAAW,WDGvCxE,UAAW,IAAIgE,EACfG,WAAY,IERZ,aAAe,IAAD,gCALdW,MAAe,CACbC,MAAM,EACNzJ,KAAM,MAGM,KAId0J,UAAY,SAACC,GACX,EAAKH,MAAMC,MAAO,EAClB,EAAKD,MAAMxJ,KAAO2J,GANN,KASdb,WAAa,WACX,EAAKU,MAAMC,MAAO,EAClB,EAAKD,MAAMxJ,KAAO,MAVlBoG,YAAmB5I,OFQrBoM,aAAc,IAAItC,EAClBuC,aAAc,IGVd,aAAe,IAAD,gCAHdC,SAA0B,GAGZ,KAFdC,cAAsC,KAExB,KAIdC,oBAAsB,SAACC,GACjB5L,EAAMiK,cAAclF,mBACtB,EAAK2G,eAAgB,IAAIG,KACtBC,QAAQpM,oBAAkDkM,EAAY,CACrEG,mBAAoB,kCAAM/L,EAAMqG,UAAUzD,YAAtB,aAAM,EAAsB7C,SAEjDiM,yBACAC,iBAAiBC,IAASC,aAC1BC,QAEH,EAAKV,cACFW,QACAC,OAAM,SAAC9L,GAAD,OACLwF,QAAQC,IAAI,sCAAwCzF,MAGxD,EAAKkL,cAAca,GAAG,gBAAgB,SAACd,GACrCrF,aAAY,WACVqF,EAAShG,SAAQ,SAAC+G,GAChBA,EAAQC,UAAY,IAAI1F,KAAKyF,EAAQC,UAAY,QAEnD,EAAKhB,SAAWA,QAIpB,EAAKC,cAAca,GAAG,kBAAkB,SAACC,GACvCpG,aAAY,WACVoG,EAAQC,UAAY,IAAI1F,KAAKyF,EAAQC,WACrC,EAAKhB,SAASiB,QAAQF,WAhChB,KAsCdG,kBAAoB,WAAO,IAAD,EACxB,YAAKjB,qBAAL,SACIkB,OACDN,OAAM,SAAC9L,GAAD,OAAWwF,QAAQC,IAAI,8BAA+BzF,OAzCnD,KA4CdqM,cAAgB,WACd,EAAKpB,SAAW,GAChB,EAAKkB,qBA9CO,KAiDdG,WAjDc,uCAiDD,WAAOtE,GAAP,iBAAAnI,EAAA,6DACXmI,EAAOoD,WAAP,UAAoB5L,EAAMiK,cAAclF,wBAAxC,aAAoB,EAAsC3C,GAD/C,4BAIH,EAAKsJ,qBAJF,aAIH,EAAoBqB,OAAO,cAAevE,GAJvC,sDAMTxC,QAAQC,IAAR,MANS,wDAjDC,sDACZ8B,YAAmB5I,QHYV6N,EAAeC,wBAAcjN,GAEnC,SAASkN,IACd,OAAOC,qBAAWH,G,WItBLI,eAAS,WACtB,MAAoCF,IAA7B7G,UAAYzD,EAAnB,EAAmBA,KAAM8H,EAAzB,EAAyBA,OACzB,OACE,cAAC2C,EAAA,EAAD,CAAMC,UAAQ,EAACC,MAAM,MAArB,SACE,eAACC,EAAA,EAAD,WACE,eAACH,EAAA,EAAKI,KAAN,CAAWC,GAAIC,IAASC,GAAG,IAAIC,OAAK,EAACC,QAAM,EAA3C,UACE,qBACEC,IAAI,mBACJC,IAAI,OACJC,MAAO,CAAEC,YAAa,UAJ1B,kBAQA,cAACb,EAAA,EAAKI,KAAN,CAAWC,GAAIC,IAASC,GAAG,cAAcO,KAAK,eAC9C,cAACd,EAAA,EAAKI,KAAN,CAAWC,GAAIC,IAASC,GAAG,UAAUO,KAAK,WAC1C,cAACd,EAAA,EAAKI,KAAN,UACE,cAACW,EAAA,EAAD,CAAQV,GAAIC,IAASC,GAAG,kBAAkBS,UAAQ,EAAC/C,QAAQ,sBAE7D,eAAC+B,EAAA,EAAKI,KAAN,CAAWa,SAAS,QAApB,UACE,cAACC,EAAA,EAAD,CAAOR,KAAS,OAAJnL,QAAI,IAAJA,OAAA,EAAAA,EAAM+B,QAAS,mBAAoB6J,QAAM,EAACC,OAAO,UAC7D,cAACC,EAAA,EAAD,CAAUC,SAAS,WAAWC,KAAI,OAAEhM,QAAF,IAAEA,OAAF,EAAEA,EAAM8B,YAA1C,SACE,eAACgK,EAAA,EAASrB,KAAV,WACE,cAACqB,EAAA,EAASjB,KAAV,CAAeC,GAAImB,IAAMjB,GAAE,2BAAehL,QAAf,IAAeA,OAAf,EAAeA,EAAM6B,UAAYmK,KAAK,aAAaE,KAAK,SACnF,cAACJ,EAAA,EAASjB,KAAV,CAAesB,QAASrE,EAAQkE,KAAK,SAASE,KAAK,0B,uHCpBlD1B,gBAAS,YAA2C,IAAD,EAAlBlE,EAAkB,EAAlBA,QAC9C,EAAoCgE,IAA5B3B,EAAR,EAAQA,aAAclF,EAAtB,EAAsBA,UACd9C,EAA6BgI,EAA7BhI,gBAAiB0B,EAAYsG,EAAZtG,QAEzB,IAAI,UAAAoB,EAAUzD,YAAV,eAAgB6B,YAAayE,EAAQnG,SAAU,OAAO,KAS1D,OACE,eAACiM,GAAA,EAAD,CAAQC,SAAS,OAAjB,UACE,cAACD,GAAA,EAAOE,QAAR,CAAgBC,SAAO,EAAClB,MAAO,CAAEmB,MAAO,QAAxC,SACE,cAAChB,EAAA,EAAD,CACEiB,OAAK,EACLC,MAAM,OACNhE,QAASpC,EAAQrB,UAAY,YAAc,oBAG/C,cAACmH,GAAA,EAAOE,QAAR,CAAgBK,QAAM,EAACtB,MAAO,CAAEmB,MAAO,QAAvC,SACE,cAAChB,EAAA,EAAD,CACEiB,OAAK,EACLG,OAAK,EACLF,MAAOpG,EAAQrB,UAAY,MAAQ,QACnCyD,QAASpC,EAAQrB,UAAY,WAAa,SAC1C5C,QAASA,EACT8J,QAAS,SAACU,GAAD,OAvBjB,SAAsBA,EAAmB1M,GACvC0M,EAAEC,iBACFxG,EAAQrB,UACJtE,EAAgBR,GAAU,GAC1BQ,EAAgBR,GAAU,GAmBR4M,CAAaF,EAAGvG,EAAQnG,qBC5BnCqK,gBAAS,YAA0C,IAAnBlE,EAAkB,EAAlBA,QAC7C,OACE,eAAC0G,GAAA,EAAD,CAAMlC,GAAImB,IAAMjB,GAAE,oBAAe1E,EAAQnG,UAAzC,UACE,cAACwL,EAAA,EAAD,CAAOR,IAAK7E,EAAQvE,OAAS,qBAC7B,eAACiL,GAAA,EAAKV,QAAN,WACE,cAACU,GAAA,EAAKC,OAAN,UAAc3G,EAAQxE,cACtB,cAACoL,GAAA,EAAD,+BAEF,eAACF,GAAA,EAAKV,QAAN,CAAca,OAAK,EAAnB,UACE,cAACC,EAAA,EAAD,CAAM7B,KAAK,SACVjF,EAAQgB,eAFX,gBAIA,cAAC,GAAD,CAAchB,QAASA,UCZdkE,gBAAS,YAAsD,IAAnB7G,EAAkB,EAAlBA,UACjD0J,EAAS,CACXC,YAAa,SACbC,YAAa,GAGjB,OACI,cAACC,EAAA,EAAD,CAAMC,YAAU,EAAhB,SACK9J,EAAU+J,KAAI,SAAApJ,GAAQ,OACnB,cAACqJ,GAAA,EAAD,CACIC,WAAS,EAETC,QACI,cAACL,EAAA,EAAK3C,KAAN,CAAmCC,GAAImB,IAAMjB,GAAE,oBAAe1G,EAASnE,UAAvE,SACA,cAACwL,EAAA,EAAD,CACImC,KAAK,OACLC,UAAQ,EAAC5C,IAAK7G,EAASvC,OAAS,mBAChCiM,UAAQ,EACR3C,MAAO/G,EAASW,UAAYoI,EAAQ,QALxB/I,EAASnE,UAJjC,SAcI,cAACwN,GAAA,EAAMrB,QAAP,UACI,cAAC,GAAD,CAAahG,QAAShC,OAbrBA,EAASnE,kBCXnB,SAAS8N,GAAT,GAAgD,IAAD,IAAnB7M,EAAmB,EAAnBA,SACzC,OACE,eAAC8M,EAAA,EAAQC,MAAT,WACE,eAACD,EAAA,EAAD,WACG9M,EAAS0D,YACR,cAACsJ,EAAA,EAAD,CACEC,SAAS,MACT3B,MAAM,MACNhE,QAAQ,WACR2C,MAAO,CAAEiD,UAAW,YAIxB,cAACzD,EAAA,EAAKsD,MAAN,UACE,eAACtD,EAAA,EAAD,WACE,cAACA,EAAA,EAAKc,MAAN,CACEN,MAAO,CAAEkD,aAAc,GACvBT,KAAK,OACLC,UAAQ,EACR5C,KAAK,UAAA/J,EAAS4C,YAAT,eAAejC,QAAS,qBAE/B,eAAC8I,EAAA,EAAKyB,QAAN,WACE,cAACzB,EAAA,EAAKoC,OAAN,CAAanC,GAAImB,IAAMjB,GAAE,sBAAiB5J,EAAS5B,IAAnD,SACG4B,EAASE,QAEZ,eAACuJ,EAAA,EAAK2D,YAAN,uBACY,IACV,cAAC,IAAD,CAAMxD,GAAE,oBAAe5J,EAAS0C,cAAhC,mBACG1C,EAAS4C,YADZ,aACG,EAAelC,iBAGnBV,EAASyC,QACR,cAACgH,EAAA,EAAK2D,YAAN,UACE,cAACJ,EAAA,EAAD,CAAOxB,OAAK,EAACF,MAAM,SAAnB,6CAKHtL,EAASsC,UAAYtC,EAASyC,QAC7B,cAACgH,EAAA,EAAK2D,YAAN,UACE,cAACJ,EAAA,EAAD,CAAOxB,OAAK,EAACF,MAAM,QAAnB,yDASZ,cAACwB,EAAA,EAAD,UACE,iCACE,cAACd,EAAA,EAAD,CAAM7B,KAAK,UACVnF,kBAAOhF,EAASK,KAAO,uBACxB,cAAC2L,EAAA,EAAD,CAAM7B,KAAK,WAHb,IAG0BnK,EAASO,WAGrC,cAACuM,EAAA,EAAD,CAASO,WAAS,EAAlB,SACE,cAAC,GAAD,CAA0B9K,UAAWvC,EAASuC,cAEhD,eAACuK,EAAA,EAAD,CAASQ,UAAQ,EAAjB,UACE,+BAAOtN,EAASI,cAChB,cAACgK,EAAA,EAAD,CACEV,GAAImB,IACJjB,GAAE,sBAAiB5J,EAAS5B,IAC5BkN,MAAM,OACNiC,QAAQ,QACRjG,QAAQ,eCvEH8B,oBAAS,WACtB,IACQoE,EADkBtE,IAAlBjD,cACAuH,kBAER,OACE,mCACGA,EAAkBlB,KAAI,mCAAEmB,EAAF,KAAS1I,EAAT,YACrB,eAAC,WAAD,WACE,cAAC8G,EAAA,EAAD,CAAQ6B,KAAG,EAACpC,MAAM,OAAlB,SACGmC,IAEF1I,EAAWuH,KAAI,SAACtM,GAAD,OACd,cAAC6M,GAAD,CAAoC7M,SAAUA,GAAvBA,EAAS5B,SALrBqP,W,UCPRrE,gBAAS,WACtB,MAEIF,IADFjD,cAAiBxG,EADnB,EACmBA,UAAW6B,EAD9B,EAC8BA,aAE9B,OACE,qCACE,eAAC+H,EAAA,EAAD,CAAMsE,UAAQ,EAACjB,KAAK,QAAQzC,MAAO,CAAEmB,MAAO,OAAQwC,UAAW,IAA/D,UACE,cAAC/B,EAAA,EAAD,CAAQf,KAAK,SAASmC,UAAQ,EAAC3B,MAAM,OAAOhE,QAAQ,YACpD,cAAC+B,EAAA,EAAKI,KAAN,CACEnC,QAAQ,iBACRuG,OAAQpO,EAAUqO,IAAI,OACtB/C,QAAS,kBAAMzJ,EAAa,MAAO,WAErC,cAAC+H,EAAA,EAAKI,KAAN,CACEnC,QAAQ,YACRuG,OAAQpO,EAAUqO,IAAI,WACtB/C,QAAS,kBAAMzJ,EAAa,UAAW,WAEzC,cAAC+H,EAAA,EAAKI,KAAN,CACEnC,QAAQ,cACRuG,OAAQpO,EAAUqO,IAAI,UACtB/C,QAAS,kBAAMzJ,EAAa,SAAU,cAG1C,cAACuK,EAAA,EAAD,IACA,cAAC,KAAD,CACEkC,SAAU,SAAC1N,GAAD,OAAgBiB,EAAa,YAAajB,IACpDkB,MAAO9B,EAAUhC,IAAI,cAAgB,IAAIsF,a,+BC9BlC,SAASiL,KACtB,OACE,cAAC,WAAD,UACE,cAACC,GAAA,EAAD,CAAa5C,OAAK,EAACpB,MAAO,CAAE2D,UAAW,IAAvC,SACE,eAACd,EAAA,EAAQC,MAAT,WACE,cAACD,EAAA,EAAD,CAAS7C,MAAO,CAAEiE,UAAW,KAA7B,SACE,eAACD,GAAA,EAAD,WACE,eAACA,GAAA,EAAYpC,OAAb,CAAoBlL,OAAK,EAAzB,UACE,cAACsN,GAAA,EAAYE,KAAb,IACA,cAACF,GAAA,EAAYE,KAAb,OAEF,cAACF,GAAA,EAAYG,UAAb,UACE,cAACH,GAAA,EAAYE,KAAb,WAIN,cAACrB,EAAA,EAAD,UACE,eAACmB,GAAA,EAAD,WACE,cAACA,GAAA,EAAYE,KAAb,IACA,cAACF,GAAA,EAAYE,KAAb,SAGJ,cAACrB,EAAA,EAAD,CAASO,WAAS,EAACpD,MAAO,CAAEiE,UAAW,MACvC,cAACpB,EAAA,EAAD,CAASQ,UAAQ,EAAjB,SACE,cAAClD,EAAA,EAAD,CAAQiE,UAAQ,EAAC/C,MAAM,OAAOiC,QAAQ,QAAQjG,QAAQ,kBCjBnD8B,oBAAS,WACtB,IAAQnD,EAAkBiD,IAAlBjD,cACAvE,EACNuE,EADMvE,eAAgBb,EACtBoF,EADsBpF,kBAAmBQ,EACzC4E,EADyC5E,gBAAiBnG,EAC1D+K,EAD0D/K,WAE5D,EAAsCoT,oBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAYA,OAJAC,qBAAU,WACJ5N,EAAkB6L,MAAQ,GAAGhL,MAChC,CAACb,EAAkB6L,KAAMhL,IAG1B,eAACgN,EAAA,EAAD,WACE,cAACA,EAAA,EAAKC,OAAN,CAAavD,MAAM,KAAnB,SACGnF,EAAc/E,iBAAmBqN,EAChC,qCACE,cAACP,GAAD,IACA,cAACA,GAAD,OAGF,cAAC,KAAD,CACEY,UAAW,EACXC,SArBV,WACEL,GAAe,GACfnN,EAAgB,IAAIjG,EAAaF,EAAY4T,YAAc,IAC3DpN,IAAiBhE,MAAK,kBAAM8Q,GAAe,OAmBnCO,SACGR,KACCrT,GACFA,EAAW4T,YAAc5T,EAAW8T,WAEtCC,aAAa,EARf,SAUE,cAAC,GAAD,QAIN,cAACP,EAAA,EAAKC,OAAN,CAAavD,MAAM,IAAnB,SACE,cAAC,GAAD,MAEF,cAACsD,EAAA,EAAKC,OAAN,CAAavD,MAAO,GAApB,SACE,cAAC8D,EAAA,EAAD,CAAQrB,OAAQU,Y,4BC1CT,SAASY,GAAYC,GAChC,MAAsBC,aAASD,EAAMjF,MAArC,mBAAOmF,EAAP,KAAcC,EAAd,KACA,OACI,eAACC,GAAA,EAAKC,MAAN,CAAYjT,MAAO+S,EAAKG,WAAaH,EAAK/S,MAA1C,UACI,gCAAQ4S,EAAMO,QACd,iDAAWL,GAAWF,IACrBG,EAAKG,SAAWH,EAAK/S,MAClB,cAACwQ,EAAA,EAAD,CAAOxB,OAAK,EAACF,MAAM,MAAnB,SAA0BiE,EAAK/S,QAChC,QCZA4M,oBAAS,WACtB,IAAQ/G,EAAc6G,IAAd7G,UACR,OACE,cAAC,KAAD,CACEuN,cAAe,CAAEC,MAAO,GAAIC,SAAU,GAAItT,MAAO,MACjDuT,SAAU,SAACvL,EAAD,OAAWwL,EAAX,EAAWA,UAAX,OACR3N,EACG1D,MAAM6F,GACN8D,OAAM,SAAC9L,GAAD,OAAWwT,EAAU,CAAExT,MAAO,kCAL3C,SAQG,gBAAGyT,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,aAActT,EAA/B,EAA+BA,OAA/B,OACC,eAAC,KAAD,CAAMuT,UAAU,UAAUJ,SAAUE,EAAcG,aAAa,MAA/D,UACE,cAACvE,EAAA,EAAD,CACEnC,GAAG,KACHpC,QAAQ,uBACRgE,MAAM,OACN4B,UAAU,WAEZ,cAACiC,GAAD,CAAahF,KAAK,QAAQkG,YAAY,UACtC,cAAClB,GAAD,CAAahF,KAAK,WAAWkG,YAAY,WAAWC,KAAK,aACzD,cAAC,KAAD,CACEnG,KAAK,QACLoG,OAAQ,kBACN,cAACvD,EAAA,EAAD,CACE/C,MAAO,CAAEkD,aAAc,IACvB3B,OAAK,EACLF,MAAM,MACNhE,QAAS1K,EAAOJ,WAItB,cAAC4N,EAAA,EAAD,CACEnJ,QAASiP,EACT7F,UAAQ,EACR/C,QAAQ,QACRgJ,KAAK,SACLjF,OAAK,a,mBCrCF,SAASmF,GAAT,GAA8C,IAAlB5T,EAAiB,EAAjBA,OACzC,OACE,cAAC6T,GAAA,EAAD,CAASjU,OAAK,EAAd,SACGI,GACC,cAAC6T,GAAA,EAAQrE,KAAT,UACGxP,EAAO0P,KAAI,SAACoE,EAAUC,GAAX,OACV,cAACF,GAAA,EAAQhH,KAAT,UAAuBiH,GAAJC,UCJhBvH,oBAAS,WACtB,IAAQ/G,EAAc6G,IAAd7G,UACR,OACE,cAAC,KAAD,CACEuN,cAAe,CACblP,YAAa,GACb3B,SAAU,GACV8Q,MAAO,GACPC,SAAU,GACVtT,MAAO,MAETuT,SAAU,SAACvL,EAAD,OAAWwL,EAAX,EAAWA,UAAX,OACR3N,EAAUxD,SAAS2F,GAAQ8D,OAAM,SAAC9L,GAAD,OAAWwT,EAAU,CAAExT,cAE1DoU,iBAAkBC,KAAW,CAC3BnQ,YAAamQ,OAAaC,WAC1B/R,SAAU8R,OAAaC,WACvBjB,MAAOgB,OAAaC,WAAWjB,QAC/BC,SAAUe,OAAaC,aAf3B,SAkBG,gBAAGb,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,aAActT,EAA/B,EAA+BA,OAAQmU,EAAvC,EAAuCA,QAASC,EAAhD,EAAgDA,MAAhD,OACC,eAAC,KAAD,CACEb,UAAU,gBACVJ,SAAUE,EACVG,aAAa,MAHf,UAKE,cAACvE,EAAA,EAAD,CACEnC,GAAG,KACHpC,QAAQ,yBACRgE,MAAM,OACN4B,UAAU,WAEZ,cAACiC,GAAD,CAAahF,KAAK,cAAckG,YAAY,iBAC5C,cAAClB,GAAD,CAAahF,KAAK,WAAWkG,YAAY,aACzC,cAAClB,GAAD,CAAahF,KAAK,QAAQkG,YAAY,UACtC,cAAClB,GAAD,CAAahF,KAAK,WAAWkG,YAAY,WAAWC,KAAK,aACzD,cAAC,KAAD,CACEnG,KAAK,QACLoG,OAAQ,kBAAM,cAACC,GAAD,CAAkB5T,OAAQA,EAAOJ,WAEjD,cAAC4N,EAAA,EAAD,CACEiE,UAAW0C,IAAYC,GAASd,EAChCjP,QAASiP,EACT7F,UAAQ,EACR/C,QAAQ,WACRgJ,KAAK,SACLjF,OAAK,aChDFjC,gBAAS,WACtB,MAAkCF,IAA1B7G,EAAR,EAAQA,UAAWmE,EAAnB,EAAmBA,WACnB,OACE,cAACsG,EAAA,EAAD,CAASxD,UAAQ,EAAC4D,UAAU,SAASS,UAAQ,EAACwC,UAAU,aAAxD,SACE,eAAC3G,EAAA,EAAD,CAAWoB,MAAI,EAAf,UACE,eAACiB,EAAA,EAAD,CAAQnC,GAAG,KAAKJ,UAAQ,EAAxB,UACE,cAACiB,EAAA,EAAD,CACEmC,KAAK,UACL3C,IAAI,mBACJC,IAAI,OACJC,MAAO,CAAEkD,aAAc,MAL3B,kBASC9K,EAAU4O,WACT,qCACE,cAACpF,EAAA,EAAD,CAAQnC,GAAG,KAAKJ,UAAQ,EAAChC,QAAQ,4BACjC,cAAC8C,EAAA,EAAD,CAAQV,GAAImB,IAAMjB,GAAG,cAAc8C,KAAK,OAAOpD,UAAQ,EAAvD,kCAKF,qCACE,cAACc,EAAA,EAAD,CACEW,QAAS,kBAAMvE,EAAWa,UAAU,cAAC,GAAD,MACpCqF,KAAK,OACLpD,UAAQ,EAHV,oBAOA,cAACc,EAAA,EAAD,CACEW,QAAS,kBAAMvE,EAAWa,UAAU,cAAC,GAAD,MACpCqF,KAAK,OACLpD,UAAQ,EAHV,kC,UC9BG,SAAS4H,GAAT,GAA4E,IAAD,IAAhD5H,gBAAgD,aAA/BhC,eAA+B,MAArB,aAAqB,EACtF,OACI,cAAC6J,GAAA,EAAD,CAAQtD,QAAQ,EAAMvE,SAAUA,EAAhC,SACI,cAAC4F,EAAA,EAAD,CAAQ5H,QAASA,M,cCAd,SAAS8J,GAAWhC,GAC/B,MAAsBC,aAASD,EAAMjF,MAArC,mBAAOmF,EAAP,KAAcC,EAAd,KACA,OACI,eAACC,GAAA,EAAKC,MAAN,CAAYjT,MAAO+S,EAAKG,WAAaH,EAAK/S,MAA1C,UACI,gCAAQ4S,EAAMO,QACd,oDAAcL,GAAWF,IACxBG,EAAKG,SAAWH,EAAK/S,MAClB,cAACwQ,EAAA,EAAD,CAAOxB,OAAK,EAACF,MAAM,MAAnB,SAA0BiE,EAAK/S,QAChC,Q,cCRA,SAAS6U,GAAcjC,GAClC,MAA+BC,aAASD,EAAMjF,MAA9C,mBAAOmF,EAAP,KAAcC,EAAd,KAAoB+B,EAApB,KACA,OACI,eAAC9B,GAAA,EAAKC,MAAN,CAAYjT,MAAO+S,EAAKG,WAAaH,EAAK/S,MAA1C,UACI,gCAAQ4S,EAAMO,QACd,cAAC4B,GAAA,EAAD,CACIC,WAAS,EACTC,QAASrC,EAAMqC,QACflQ,MAAO+N,EAAM/N,OAAS,KACtBwM,SAAU,SAACtC,EAAGiG,GAAJ,OAAUJ,EAAQK,SAASD,EAAEnQ,QACvCqQ,OAAQ,kBAAMN,EAAQO,YAAW,IACjCxB,YAAajB,EAAMiB,cAGtBd,EAAKG,SAAWH,EAAK/S,MAClB,cAACwQ,EAAA,EAAD,CAAOxB,OAAK,EAACF,MAAM,MAAnB,SAA0BiE,EAAK/S,QAChC,QC3BR,IAAMsV,GAAkB,CAC3B,CAAClH,KAAM,SAAUrJ,MAAO,UACxB,CAACqJ,KAAM,UAAWrJ,MAAO,WACzB,CAACqJ,KAAM,OAAQrJ,MAAO,QACtB,CAACqJ,KAAM,OAAQrJ,MAAO,QACtB,CAACqJ,KAAM,QAASrJ,MAAO,SACvB,CAACqJ,KAAM,SAAUrJ,MAAO,W,qBCAb,SAASwQ,GAAY3C,GAChC,MAA+BC,aAASD,EAAMjF,MAA9C,mBAAOmF,EAAP,KAAcC,EAAd,KAAoB+B,EAApB,KACA,OACI,eAAC9B,GAAA,EAAKC,MAAN,CAAYjT,MAAO+S,EAAKG,WAAaH,EAAK/S,MAA1C,UACI,cAAC,KAAD,uCACQ8S,GACAF,GAFR,IAGI4C,SAAW1C,EAAM/N,OAAS,IAAIwB,KAAKuM,EAAM/N,QAAW,KACpDwM,SAAU,SAAAxM,GAAK,OAAI+P,EAAQK,SAASpQ,OAEvCgO,EAAKG,SAAWH,EAAK/S,MAClB,cAACwQ,EAAA,EAAD,CAAOxB,OAAK,EAACF,MAAM,MAAnB,SAA0BiE,EAAK/S,QAChC,QCAA4M,oBAAS,WACtB,IAAMtM,EAAUmV,eACRhM,EAAkBiD,IAAlBjD,cACAhD,EACNgD,EADMhD,eAAgBG,EACtB6C,EADsB7C,eAAgBlB,EACtC+D,EADsC/D,aAAchB,EACpD+E,EADoD/E,eAE9C9C,EAAO8T,eAAP9T,GAER,EAAgCkQ,mBAC9B,IAAIvO,GADN,mBAAOC,EAAP,KAAiB6B,EAAjB,KAIM+O,EAAmBC,KAAW,CAClC3Q,MAAO2Q,OAAaC,SAAS,kCAC7B1Q,YAAayQ,OAAaC,SAAS,wCACnC3Q,SAAU0Q,OAAaC,WACvBzQ,KAAMwQ,OAAaC,SAAS,oBAAoBqB,WAChD5R,MAAOsQ,OAAaC,WACpBxQ,KAAMuQ,OAAaC,aA0BrB,OAvBArC,qBAAU,WACJrQ,GACF8D,EAAa9D,GAAIV,MAAK,SAACsC,GAAD,OACpB6B,EAAY,IAAI9B,EAAmBC,SAEtC,CAAC5B,EAAI8D,IAkBJhB,EAAuB,cAACgQ,GAAD,CAAkB5J,QAAQ,wBAGnD,eAACwF,EAAA,EAAD,CAASQ,UAAQ,EAAjB,UACE,cAACzB,EAAA,EAAD,CAAQvE,QAAQ,mBAAmBoG,KAAG,EAACpC,MAAM,SAC7C,cAAC,KAAD,CACEsF,iBAAkBA,EAClBwB,oBAAkB,EAClBxC,cAAe5P,EACf+P,SAAU,SAACvL,GAAD,OAzBhB,SAA0BxE,GACxB,GAAKA,EAAS5B,GASZgF,EAAepD,GAAUtC,MAAK,kBAC5BZ,EAAQC,KAAR,sBAA4BiD,EAAS5B,YAVvB,CAChB,IAAI+E,EAAW,2BACVnD,GADU,IAEb5B,GAAIiU,iBAENpP,EAAeE,GAAazF,MAAK,kBAC/BZ,EAAQC,KAAR,sBAA4BoG,EAAY/E,SAkBlBkU,CAAiB9N,IAJzC,SAMG,gBAAGyL,EAAH,EAAGA,aAAcc,EAAjB,EAAiBA,QAASb,EAA1B,EAA0BA,aAAcc,EAAxC,EAAwCA,MAAxC,OACC,eAACxB,GAAA,EAAD,CAAMW,UAAU,UAAUJ,SAAUE,EAAcG,aAAa,MAA/D,UACE,cAACjB,GAAD,CAAahF,KAAK,QAAQkG,YAAY,UAEtC,cAACe,GAAD,CAAYmB,KAAM,EAAGlC,YAAY,cAAclG,KAAK,gBACpD,cAACkH,GAAD,CACEI,QAASK,GACTzB,YAAY,WACZlG,KAAK,aAEP,cAAC4H,GAAD,CACES,gBAAgB,OAChBrI,KAAK,OACLsI,gBAAc,EACdC,YAAY,OACZC,WAAW,wBAEb,cAAC9G,EAAA,EAAD,CAAQvE,QAAQ,mBAAmBoG,KAAG,EAACpC,MAAM,SAC7C,cAAC6D,GAAD,CAAakB,YAAY,OAAOlG,KAAK,SACrC,cAACgF,GAAD,CAAakB,YAAY,QAAQlG,KAAK,UACtC,cAACC,EAAA,EAAD,CACEiE,SAAU6B,IAAiBc,IAAUD,EACrC9P,QAASiP,EACT3C,QAAQ,QACRlD,UAAQ,EACRiG,KAAK,SACLhJ,QAAQ,WAEV,cAAC8C,EAAA,EAAD,CACEV,GAAImB,IACJjB,GAAI,cACJ2D,QAAQ,QACR+C,KAAK,SACLhJ,QAAQ,uBCjGhBsL,GAAqB,CACzBpP,OAAQ,mBAGJqP,GAAyB,CAC7BvI,SAAU,WACVwI,OAAQ,KACRC,KAAM,KACN3H,MAAO,OACP4H,OAAQ,OACR1H,MAAO,SAOMlC,gBAAS,YAAsD,IAAD,IAAnBpJ,EAAmB,EAAnBA,SACxD,EAEIkJ,IADFjD,cAAiB1C,EADnB,EACmBA,iBAAkBtC,EADrC,EACqCA,QAASwC,EAD9C,EAC8CA,qBAE9C,OACE,eAACqJ,EAAA,EAAQC,MAAT,WACE,eAACD,EAAA,EAAD,CAAStB,OAAK,EAACyB,SAAS,MAAMhD,MAAO,CAAEgJ,QAAS,KAAhD,UACGjT,EAAS0D,YACR,cAACsJ,EAAA,EAAD,CACE/C,MAAO,CAAEK,SAAU,WAAY4I,OAAQ,IAAMH,MAAO,GAAII,IAAK,IAC7DC,QAAM,EACN9H,MAAM,MACNhE,QAAQ,aAGZ,cAACiD,EAAA,EAAD,CACER,IAAG,iCAA4B/J,EAASG,SAArC,QACHkL,OAAK,EACLpB,MAAO2I,KAET,cAAC9F,EAAA,EAAD,CAAS7C,MAAO4I,GAAwBrH,OAAK,EAA7C,SACE,cAAC/B,EAAA,EAAKsD,MAAN,UACE,cAACtD,EAAA,EAAD,UACE,eAACA,EAAA,EAAKyB,QAAN,WACE,cAACW,EAAA,EAAD,CACEa,KAAK,OACLpF,QAAStH,EAASE,MAClB+J,MAAO,CAAEqB,MAAO,WAElB,4BAAItG,kBAAOhF,EAASK,KAAO,iBAC3B,0CACY,IACV,iCACE,cAAC,IAAD,CAAMuJ,GAAE,8BAAe5J,EAAS4C,YAAxB,aAAe,EAAe7D,UAAtC,mBACGiB,EAAS4C,YADZ,aACG,EAAelC,+BAShC,cAACoM,EAAA,EAAD,CAASQ,UAAQ,EAACL,SAAS,SAA3B,SACGjN,EAASyC,OACR,qCACE,cAAC2H,EAAA,EAAD,CACEkB,MAAOtL,EAAS0D,WAAa,QAAU,MACvC6J,QAAQ,OACR/B,OAAK,EACLlE,QACEtH,EAAS0D,WAAa,uBAAyB,kBAEjDqH,QAAStH,EACTxC,QAASA,IAEX,cAACmJ,EAAA,EAAD,CACEV,GAAImB,IACJwD,SAAUrO,EAAS0D,WACnBkG,GAAE,kBAAa5J,EAAS5B,IACxBkN,MAAM,SACNiC,QAAQ,QALV,6BAUAvN,EAASsC,QACX,cAAC8H,EAAA,EAAD,CAAQnJ,QAASA,EAAS8J,QAASxH,EAAnC,+BAIA,cAAC6G,EAAA,EAAD,CACEiE,SAAUrO,EAAS0D,WACnBzC,QAASA,EACT8J,QAASxH,EACT+H,MAAM,OAJR,mCCtFKlC,gBAAS,YAAoD,IAApBpJ,EAAmB,EAAnBA,SACtD,OACE,eAAC8M,EAAA,EAAQC,MAAT,WACE,cAACD,EAAA,EAAD,CAASG,SAAS,MAAlB,SACE,eAACyB,EAAA,EAAD,WACE,cAACA,EAAA,EAAKC,OAAN,CAAavD,MAAO,EAApB,SACE,cAACY,EAAA,EAAD,CAAMU,KAAK,QAAQpB,MAAM,OAAOnB,KAAK,WAEvC,cAACuE,EAAA,EAAKC,OAAN,CAAavD,MAAO,GAApB,SACE,4BAAIpL,EAASI,qBAInB,cAAC0M,EAAA,EAAD,CAASG,UAAQ,EAAjB,SACE,eAACyB,EAAA,EAAD,CAAM2E,cAAc,SAApB,UACE,cAAC3E,EAAA,EAAKC,OAAN,CAAavD,MAAO,EAApB,SACE,cAACY,EAAA,EAAD,CAAM7B,KAAK,WAAWuC,KAAK,QAAQpB,MAAM,WAE3C,cAACoD,EAAA,EAAKC,OAAN,CAAavD,MAAO,GAApB,SACE,+BAAOpG,kBAAOhF,EAASK,KAAO,+BAIpC,cAACyM,EAAA,EAAD,CAASG,UAAQ,EAAjB,SACE,eAACyB,EAAA,EAAD,CAAM2E,cAAc,SAApB,UACE,cAAC3E,EAAA,EAAKC,OAAN,CAAavD,MAAO,EAApB,SACE,cAACY,EAAA,EAAD,CAAM7B,KAAK,SAASuC,KAAK,QAAQpB,MAAM,WAEzC,cAACoD,EAAA,EAAKC,OAAN,CAAavD,MAAO,GAApB,SACE,iCACGpL,EAASO,MADZ,KACqBP,EAASM,qB,oBC3B3B8I,gBAAS,YAAsD,IAAtBxB,EAAqB,EAArBA,WAC9CJ,EAAiB0B,IAAjB1B,aAWR,OATAiH,qBAAU,WAIR,OAHI7G,GACFJ,EAAaG,oBAAoBC,GAE5B,WACLJ,EAAaqB,mBAEd,CAACrB,EAAcI,IAGhB,qCACE,cAACkF,EAAA,EAAD,CACEI,UAAU,SACVD,SAAS,MACT3D,UAAQ,EACRgC,MAAM,OACNrB,MAAO,CAAEqJ,OAAQ,QALnB,SAOE,cAACzH,EAAA,EAAD,sCAEF,eAACiB,EAAA,EAAD,CAASG,UAAQ,EAACK,UAAQ,EAA1B,UACE,cAAC,KAAD,CACEyC,SAAU,SAACvL,EAAD,OAAW+O,EAAX,EAAWA,UAAX,OACR/L,EAAasB,WAAWtE,GAAQ9G,MAAK,kBAAM6V,MAE7C3D,cAAe,CAAEjS,KAAM,IACvBiT,iBAAkBC,KAAW,CAC3BlT,KAAMkT,OAAaC,aANvB,SASG,gBAAGZ,EAAH,EAAGA,aAAca,EAAjB,EAAiBA,QAASd,EAA1B,EAA0BA,aAA1B,OACC,cAAC,KAAD,CAAME,UAAU,UAAhB,SACE,cAAC,KAAD,CAAOhG,KAAK,OAAZ,SACG,SAACiF,GAAD,OACC,sBAAKnF,MAAO,CAAEK,SAAU,YAAxB,UACE,cAAC4E,EAAA,EAAD,CAAQrB,OAAQqC,IAChB,kDACEG,YAAY,iEACZkC,KAAM,GACFnD,EAAME,OAHZ,IAIEkE,WAAY,SAAC/H,GACG,UAAVA,EAAExO,KAAmBwO,EAAEgI,UAGb,UAAVhI,EAAExO,KAAoBwO,EAAEgI,WAC1BhI,EAAEC,iBACFqF,GAAWd,oBAU7B,cAACyD,GAAA,EAAQ3G,MAAT,UACGvF,EAAaC,SAAS6E,KAAI,SAAC9D,GAAD,OACzB,eAACkL,GAAA,EAAD,WACE,cAACA,GAAA,EAAQC,OAAT,CAAgB5J,IAAKvB,EAAQ7H,OAAS,qBACtC,eAAC+S,GAAA,EAAQxI,QAAT,WACE,cAACwI,GAAA,EAAQE,OAAT,CAAgBlK,GAAImB,IAAMjB,GAAE,oBAAepB,EAAQzJ,UAAnD,SACGyJ,EAAQ9H,cAEX,cAACgT,GAAA,EAAQG,SAAT,UACE,gCAAMC,aAAoBtL,EAAQC,WAAlC,YAEF,cAACiL,GAAA,EAAQK,KAAT,CAAc9J,MAAO,CAAE+J,WAAY,YAAnC,SACGxL,EAAQ7K,YAVD6K,EAAQpK,kBChEnBgL,gBAAS,YAAyE,IAAD,IAArCpJ,SAAWuC,EAA0B,EAA1BA,UAAWK,EAAe,EAAfA,KAC7E,OAAIL,EAEA,qCACI,eAACuK,EAAA,EAAD,CACII,UAAU,SACVjD,MAAO,CAAEqJ,OAAQ,QACjBrG,SAAS,MACTI,WAAS,EACT/D,UAAQ,EACRgC,MAAM,OANV,UAQK/I,EAAU0R,OARf,IAQ6C,IAArB1R,EAAU0R,OAAe,SAAU,SAR3D,YAUA,cAACnH,EAAA,EAAD,CAASG,UAAQ,EAAjB,SACI,cAACb,EAAA,EAAD,CAAM8H,SAAO,EAACC,SAAO,EAArB,SACK5R,EAAU+J,KAAI,SAAApJ,GAAQ,OACnB,eAACuG,EAAA,EAAD,CAAMQ,MAAO,CAAEK,SAAU,YAAzB,UACKpH,EAASnE,YAAT,OAAsB6D,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAM7D,WACzB,cAACiO,EAAA,EAAD,CACA/C,MAAO,CAAEK,SAAU,YACnBgB,MAAM,SACN8H,OAAO,QAHP,kBASR,cAAC7I,EAAA,EAAD,CAAOmC,KAAK,OAAO3C,IAAK7G,EAASvC,OAAS,qBAC1C,eAAC8I,EAAA,EAAKyB,QAAN,CAAcmI,cAAc,SAA5B,UACI,cAAC5J,EAAA,EAAKoC,OAAN,CAAanC,GAAG,KAAhB,SACI,cAAC,IAAD,CAAME,GAAE,oBAAe1G,EAASnE,UAAhC,SAA6CmE,EAASxC,gBAEzDwC,EAASW,WACV,cAAC4F,EAAA,EAAK2K,MAAN,CAAYnK,MAAO,CAAEqB,MAAO,UAA5B,4BAjBwCpI,EAASnE,oBAhBnD,QCCXqK,gBAAS,WACtB,IAAQnD,EAAkBiD,IAAlBjD,cAEYjG,EAIhBiG,EAJFlF,iBACAmB,EAGE+D,EAHF/D,aACAhB,EAEE+E,EAFF/E,eACAyC,EACEsC,EADFtC,sBAEMvF,EAAO8T,eAAP9T,GAOR,OALAqQ,qBAAU,WAER,OADIrQ,GAAI8D,EAAa9D,GACd,kBAAMuF,OACZ,CAACvF,EAAI8D,EAAcyB,IAElBzC,IAAmBlB,EAAiB,cAACkR,GAAD,IAGtC,eAACxC,EAAA,EAAD,WACE,eAACA,EAAA,EAAKC,OAAN,CAAavD,MAAO,GAApB,UACE,cAAC,GAAD,CAAwBpL,SAAUA,IAClC,cAAC,GAAD,CAAsBA,SAAUA,IAChC,cAAC,GAAD,CAAsB4H,WAAY5H,EAAS5B,QAE7C,cAACsQ,EAAA,EAAKC,OAAN,CAAavD,MAAO,EAApB,SACE,cAAC,GAAD,CAAyBpL,SAAUA,YChC5B,SAASqU,KACtB,IACA,EAA4B/F,mBAAS,MAArC,mBAAO1R,EAAP,KAAeoT,EAAf,KAoCA,OACE,qCACE,cAACnE,EAAA,EAAD,CAAQnC,GAAG,KAAKpC,QAAQ,yBACxB,cAACwF,EAAA,EAAD,UACE,eAAC1C,EAAA,EAAO2C,MAAR,CAAcuH,OAAO,IAArB,UACE,cAAClK,EAAA,EAAD,CAAQW,QAvChB,WACExP,IACGkC,IAAI8W,uBACJjM,OAAM,SAACoI,GAAD,OAAS1O,QAAQC,IAAIyO,EAAItU,cAoCKkL,QAAQ,YAAYkE,OAAK,EAACgJ,SAAO,IAClE,cAACpK,EAAA,EAAD,CACEW,QAnCV,WACExP,IACGkC,IAAI8W,yBACJjM,OAAM,SAACoI,GAAD,OAAS1O,QAAQC,IAAIyO,EAAItU,cAiC1BkL,QAAQ,cACRkE,OAAK,EACLgJ,SAAO,IAET,cAACpK,EAAA,EAAD,CACEW,QAjBV,WACExP,IAAMqC,KAAK2W,iBAAwB,IAAIjM,OAAM,SAACoI,GAAD,OAASV,EAAUU,OAiBxDpJ,QAAQ,mBACRkE,OAAK,EACLgJ,SAAO,IAET,cAACpK,EAAA,EAAD,CACEW,QAzCV,WACExP,IACGkC,IAAI8W,0BACJjM,OAAM,SAACoI,GAAD,OAAS1O,QAAQC,IAAIyO,EAAItU,cAuC1BkL,QAAQ,eACRkE,OAAK,EACLgJ,SAAO,IAET,cAACpK,EAAA,EAAD,CACEW,QAzCV,WACExP,IACGkC,IAAI8W,0BACJjM,OAAM,SAACoI,GAAD,OAAS1O,QAAQC,IAAIyO,EAAItU,cAuC1BkL,QAAQ,eACRkE,OAAK,EACLgJ,SAAO,IAET,cAACpK,EAAA,EAAD,CAAQW,QAxChB,WACExP,IACGkC,IAAI8W,2BACJjM,OAAM,SAACoI,GAAD,OAAS1O,QAAQC,IAAIyO,EAAItU,cAqCIkL,QAAQ,WAAWkE,OAAK,EAACgJ,SAAO,SAGnE5X,GAAU,cAAC4T,GAAD,CAAkB5T,OAAQA,OCxE5B,SAAS6X,KACtB,OACE,eAAC3H,EAAA,EAAD,CAASuD,aAAW,EAApB,UACE,eAACxE,EAAA,EAAD,CAAQf,MAAI,EAAZ,UACE,cAACkB,EAAA,EAAD,CAAM7B,KAAK,WADb,6DAIA,cAAC2C,EAAA,EAAQ4H,OAAT,UACE,cAACtK,EAAA,EAAD,CAAQV,GAAImB,IAAMjB,GAAG,cAAc4K,SAAO,EAA1C,4CCPOpL,oBAAS,WAAwB,IAAD,IACrCnN,EAAgBiN,IAAhBjN,YACR,OACE,eAACuN,EAAA,EAAD,WACE,cAACqC,EAAA,EAAD,CAAQnC,GAAG,KAAKpC,QAAQ,iBACxB,cAACuE,EAAA,EAAD,CAAQ6B,KAAG,EAAChE,GAAG,KAAK4B,MAAM,MAAMhE,QAAO,UAAErL,EAAYO,aAAd,aAAE,EAAmBmY,WAC3D,UAAA1Y,EAAYO,aAAZ,eAAmB2B,UAClB,eAAC2O,EAAA,EAAD,WACE,cAACjB,EAAA,EAAD,CAAQnC,GAAG,KAAKpC,QAAQ,cAAcgE,MAAM,SAC5C,sBAAMrB,MAAO,CAAE2D,UAAW,QAA1B,SAAqC3R,EAAYO,MAAM2B,mB,UCTlDiL,gBAAS,WACpB,IAAO5C,EAAc0C,IAAd1C,WAEP,OACI,cAACoO,GAAA,EAAD,CAAOxN,KAAMZ,EAAWW,MAAMC,KAAMyN,QAASrO,EAAWC,WAAYiG,KAAK,OAAzE,SACI,cAACkI,GAAA,EAAM1J,QAAP,UACK1E,EAAWW,MAAMxJ,Y,UCH5BmX,GAAQ,CACZ,CAAEC,SAAU,gBAAiBC,KAAM,CAAE/X,IAAK,WAC1C,CAAE8X,SAAU,cAAeC,KAAM,CAAE/X,IAAK,SACxC,CAAE8X,SAAU,UAAWC,KAAM,CAAE/X,IAAK,aAGvBmM,gBAAS,WACtB,IAAQ7B,EAAiB2B,IAAjB3B,aACAnB,EACNmB,EADMnB,mBAAoBlB,EAC1BqC,EAD0BrC,QAASO,EACnC8B,EADmC9B,kBAAmBD,EACtD+B,EADsD/B,eAExDiJ,qBAAU,WACRrI,EAAmBlB,EAASnG,YAC3B,CAACqH,EAAoBlB,IAQxB,OACE,cAAC+P,GAAA,EAAIC,KAAL,CAAUjU,QAASwE,EAAnB,SACE,eAACiJ,EAAA,EAAD,WACE,cAACA,EAAA,EAAKC,OAAN,CAAavD,MAAO,GAApB,SACE,cAACS,EAAA,EAAD,CAAQ0B,QAAQ,OAAOzC,KAAK,WAAWxD,QAAS,iBAElD,eAACoH,EAAA,EAAKC,OAAN,CAAavD,MAAO,GAApB,UACE,cAAC6J,GAAA,EAAD,CACEH,MAAOA,GACPK,KAAM,CAAE9H,WAAW,EAAM1C,UAAU,GACnCyK,YAAa,SAAC3J,EAAGxQ,GAAJ,OAjBC,SAACwQ,EAAmBxQ,GAC1CmL,EACElB,EAASnG,SACT+V,GAAM7Z,EAAKoa,aAAuBL,KAAK/X,KAcPqY,CAAgB7J,EAAGxQ,MAE/C,uBACA,cAAC2Q,GAAA,EAAKmB,MAAN,CAAYwI,YAAa,EAAzB,SACG/P,EAAe8G,KAAI,SAACtM,GAAD,OAClB,eAAC4L,GAAA,EAAD,CACElC,GAAImB,IACJjB,GAAE,sBAAiB5J,EAAS5B,IAF9B,UAKE,cAACmM,EAAA,EAAD,CACER,IAAG,iCAA4B/J,EAASG,SAArC,QACH8J,MAAO,CAAEiE,UAAW,IAAKsH,UAAW,WAEtC,eAAC5J,GAAA,EAAKV,QAAN,WACE,cAACU,GAAA,EAAKC,OAAN,CAAaqB,UAAU,SAAvB,SAAiClN,EAASE,QAC1C,eAAC0L,GAAA,EAAK6J,KAAN,CAAWvI,UAAU,SAArB,UACE,8BAAMlI,kBAAO,IAAIjC,KAAK/C,EAASK,MAAO,YACtC,8BAAM2E,kBAAO,IAAIjC,KAAK/C,EAASK,MAAO,oBAVrCL,EAAS5B,oBCxCfgL,gBAAS,WACtB,IAAQ7B,EAAiB2B,IAAjB3B,aACArC,EAAsDqC,EAAtDrC,QAASG,EAA6CkC,EAA7ClC,WAAYC,EAAiCiC,EAAjCjC,kBAAmBC,EAAcgC,EAAdhC,UAEhD,OACE,eAAC0P,GAAA,EAAIC,KAAL,CAAUQ,QAASpQ,EAAnB,UACE,cAACoJ,EAAA,EAAKC,OAAN,CAAavD,MAAO,GAApB,SACE,cAACS,EAAA,EAAD,CACE0B,QAAQ,OACRzC,KAAK,OACLxD,QACgB,IAAd/B,EAAA,kCACwBL,QADxB,IACwBA,OADxB,EACwBA,EAASxE,aADjC,wBAEcwE,QAFd,IAEcA,OAFd,EAEcA,EAASxE,YAFvB,qBAMN,cAACgO,EAAA,EAAKC,OAAN,CAAavD,MAAO,GAApB,SACE,cAACQ,GAAA,EAAKmB,MAAN,CAAYwI,YAAa,EAAzB,SACGlQ,EAAWiH,KAAI,SAACpH,GAAD,OACd,cAAC,GAAD,CAAoCA,QAASA,GAA3BA,EAAQnG,uB,iBCjBvB,SAAS4W,GAAT,GAA+D,IAAlCC,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,WACtD,OACI,cAAC,KAAD,CACI9L,IAAK6L,EACL3L,MAAO,CAAC+I,OAAQ,IAAK5H,MAAO,QAC5B0K,mBAAoB,EACpBC,YAAa,EACbC,QAAQ,eACRC,QAAQ,EACRC,SAAU,EACVC,aAAc,EACdC,YAAY,EACZC,cAAe,SAAAC,GAAO,OAAIT,EAAWS,M,cCblC,SAASC,GAAT,GAAiD,IAAnBC,EAAkB,EAAlBA,SACrCC,EAAW,CACfnD,OAAQ,kBACRpH,YAAa,OACbwK,aAAc,MACdC,WAAY,OACZzJ,UAAW,SACX8F,OAAQ,KAOJ4D,EAASC,uBAAY,SAAAC,GACzBN,EAASM,EAAcxK,KAAI,SAACrN,GAAD,OAAeY,OAAOC,OAAOb,EAAM,CAC5D+W,QAASe,IAAIC,gBAAgB/X,WAE9B,CAACuX,IACJ,EAAoDS,aAAY,CAACL,WAA1DM,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,cAAeC,EAApC,EAAoCA,aAEpC,OACE,gDAASF,KAAT,IAAyBjN,MAAOmN,EAAY,2BAAOX,GAZpC,CACfvK,YAAa,UAW8DuK,EAA3E,UACE,qCAAWU,MACX,cAACnL,EAAA,EAAD,CAAM7B,KAAK,SAASuC,KAAK,SACzB,cAACb,EAAA,EAAD,CAAQvE,QAAQ,wBCvBP,SAAS+P,GAAT,GAA0D,IAA9BpW,EAA6B,EAA7BA,QAASjC,EAAoB,EAApBA,YAChD,EAA0BsP,mBAAc,IAAxC,mBAAOgJ,EAAP,KAAcd,EAAd,KACA,EAA8BlI,qBAA9B,mBAAOgI,EAAP,KAAgBT,EAAhB,KAcA,OANApH,qBAAU,WACN,OAAO,WACH6I,EAAM7V,SAAQ,SAACxC,GAAD,OAAe8X,IAAIQ,gBAAgBtY,EAAK+W,eAE3D,CAACsB,IAGA,eAAC5I,EAAA,EAAD,WACI,eAACA,EAAA,EAAKC,OAAN,CAAavD,MAAO,EAApB,UACI,cAACS,EAAA,EAAD,CAAQ6B,KAAG,EAACpC,MAAM,OAAOhE,QAAQ,uBACjC,cAACiP,GAAD,CAAqBC,SAAUA,OAEnC,cAAC9H,EAAA,EAAKC,OAAN,CAAavD,MAAO,IACpB,eAACsD,EAAA,EAAKC,OAAN,CAAavD,MAAO,EAApB,UACI,cAACS,EAAA,EAAD,CAAQ6B,KAAG,EAACpC,MAAM,OAAOhE,QAAQ,0BAChCgQ,GAASA,EAAMrD,OAAS,GACrB,cAAC0B,GAAD,CAAoBE,WAAYA,EAAYD,aAAc0B,EAAM,GAAGtB,aAG3E,cAACtH,EAAA,EAAKC,OAAN,CAAavD,MAAO,IACpB,eAACsD,EAAA,EAAKC,OAAN,CAAavD,MAAO,EAApB,UACI,cAACS,EAAA,EAAD,CAAQ6B,KAAG,EAACpC,MAAM,OAAOhE,QAAQ,8BAChCgQ,GAASA,EAAMrD,OAAS,GACrB,qCACA,qBAAK9D,UAAU,cAAclG,MAAO,CAACiE,UAAW,IAAKsJ,SAAU,YAC/D,eAACpN,EAAA,EAAO2C,MAAR,CAAcuH,OAAQ,EAAtB,UACI,cAAClK,EAAA,EAAD,CAAQnJ,QAASA,EAAS8J,QAhC9C,WACOuL,GACCA,EAAQmB,mBAAmBC,QAAO,SAAAC,GAAI,OAAI3Y,EAAY2Y,OA8BCtN,UAAQ,EAACS,KAAK,UACzD,cAACV,EAAA,EAAD,CAAQiE,SAAUpN,EAAS8J,QAAS,kBAAMyL,EAAS,KAAK1L,KAAK,sBCnCtE1B,oBAAS,YAAyC,IAAD,EAAhBlE,EAAgB,EAAhBA,QAC5C,EACsDgE,IAD/C3B,aAAeqQ,EAAtB,EAAsBA,cAAe5Y,EAArC,EAAqCA,YACjCoG,EADJ,EACIA,UAAWnE,EADf,EACeA,QAAS5B,EADxB,EACwBA,aAAcC,EADtC,EACsCA,YACtC,EAAwCgP,oBAAS,GAAjD,mBAAOuJ,EAAP,KAAqBC,EAArB,KACA,EAA4BxJ,mBAAS,IAArC,mBAAOyJ,EAAP,KAAeC,EAAf,KAgBA,OACI,cAAC/C,GAAA,EAAIC,KAAL,UACI,eAACxG,EAAA,EAAD,WACI,eAACA,EAAA,EAAKC,OAAN,CAAavD,MAAO,GAApB,UACI,cAACS,EAAA,EAAD,CAAQ0B,QAAQ,OAAOzC,KAAK,QAAQxD,QAAQ,WAC3CsQ,GACG,cAACxN,EAAA,EAAD,CAAQmD,QAAQ,QACZ/B,OAAK,EAAClE,QAASuQ,EAAe,SAAW,YACzC9M,QAAS,kBAAM+M,GAAiBD,SAI5C,cAACnJ,EAAA,EAAKC,OAAN,CAAavD,MAAO,GAApB,SACMyM,EACG,cAACR,GAAD,CAAmBrY,YA5BxC,SAA2BC,GACvBD,EAAYC,GAAMvB,MAAK,kBAAMoa,GAAgB,OA2BuB7W,QAASmE,IAE7D,cAACwG,GAAA,EAAKmB,MAAN,CAAYwI,YAAa,EAAzB,mBACCrQ,EAAQW,cADT,aACC,EAAgByG,KAAI,SAAA1G,GAAK,OACtB,eAACgG,GAAA,EAAD,WACI,cAACrB,EAAA,EAAD,CAAOR,IAAKnE,EAAMpI,MACjBoa,GACG,eAACxN,EAAA,EAAO2C,MAAR,CAAc1B,OAAK,EAACiJ,OAAQ,EAA5B,UACI,cAAClK,EAAA,EAAD,CACIoB,OAAK,EACLF,MAAM,QACNhE,QAAQ,OACR6C,KAAM,OAASvE,EAAMxH,GACrBiQ,SAAUzI,EAAME,OAChB7E,QAAS8W,IAAW,OAASnS,EAAMxH,IAAM6C,EACzC8J,QAAS,SAAAU,GAAC,OAvClD,SAA4B7F,EAAc6F,GACvCuM,EAAUvM,EAAEwM,cAAc9N,MAC1B9K,EAAauG,GAqCsCsS,CAAmBtS,EAAO6F,MAE5C,cAACrB,EAAA,EAAD,CACIoB,OAAK,EACLF,MAAM,MACNR,KAAK,QACL7J,QAAS8W,IAAWnS,EAAMxH,IAAM6C,EAChC8J,QAAS,SAAAU,GAAC,OAzClD,SAA2B7F,EAAc6F,GACrCuM,EAAUvM,EAAEwM,cAAc9N,MAC1B7K,EAAYsG,GAuCsCuS,CAAkBvS,EAAO6F,IACvC4C,SAAUzI,EAAME,OAChBqE,KAAMvE,EAAMxH,UApBjBwH,EAAMxH,mBCrC9BgL,gBAAS,YAA4C,IAAnBlE,EAAkB,EAAlBA,QACvCqC,EAAiB2B,IAAjB3B,aAEFuN,EAAQ,CACZ,CAAEC,SAAU,QAASxE,OAAQ,kBAAM,cAAC0E,GAAA,EAAIC,KAAL,8BACnC,CAAEH,SAAU,SAAUxE,OAAQ,kBAAM,cAAC,GAAD,CAAerL,QAASA,MAC5D,CAAE6P,SAAU,SAAUxE,OAAQ,kBAAM,cAAC,GAAD,MACpC,CAAEwE,SAAU,YAAaxE,OAAQ,kBAAM,cAAC6H,GAAD,MACvC,CAAErD,SAAU,YAAaxE,OAAQ,kBAAM,cAAC6H,GAAD,OAEzC,OACE,cAACnD,GAAA,EAAD,CACEE,KAAM,CAAE9J,OAAO,EAAMsC,UAAU,GAC/B0K,aAAa,QACbvD,MAAOA,EACPM,YAAa,SAAC3J,EAAGxQ,GAAJ,OAAasM,EAAa7B,aAAazK,EAAKoa,mB,oBCXhDjM,gBAAS,YAA4C,IAAnBlE,EAAkB,EAAlBA,QAC/C,OACE,cAAC4H,EAAA,EAAD,UACE,eAAC4B,EAAA,EAAD,WACE,cAACA,EAAA,EAAKC,OAAN,CAAavD,MAAO,GAApB,SACE,cAAC3B,EAAA,EAAKsD,MAAN,UACE,eAACtD,EAAA,EAAD,WACE,cAACA,EAAA,EAAKc,MAAN,CACEC,QAAM,EACNkC,KAAK,QACL3C,IAAK7E,EAAQvE,OAAS,qBAExB,cAAC8I,EAAA,EAAKyB,QAAN,CAAcmI,cAAc,SAA5B,SACE,cAACxH,EAAA,EAAD,CAAQnC,GAAG,KAAKpC,QAASpC,EAAQxE,uBAKzC,eAACgO,EAAA,EAAKC,OAAN,CAAavD,MAAO,EAApB,UACE,eAACkN,GAAA,EAAUvL,MAAX,CAAiBuH,OAAQ,EAAzB,UACE,cAACgE,GAAA,EAAD,CAAW3I,MAAM,YAAYpO,MAAO2D,EAAQgB,iBAC5C,cAACoS,GAAA,EAAD,CAAW3I,MAAM,YAAYpO,MAAO2D,EAAQpB,oBAE9C,cAACyU,GAAA,EAAD,IACA,cAAC,GAAD,CAAcrT,QAASA,eC/BlBkE,gBAAS,WACtB,IAAQrK,EAAamT,eAAbnT,SACAwI,EAAiB2B,IAAjB3B,aACApC,EAAuDoC,EAAvDpC,eAAgBQ,EAAuC4B,EAAvC5B,YAAaT,EAA0BqC,EAA1BrC,QAASQ,EAAiB6B,EAAjB7B,aAS9C,OAPA+I,qBAAU,WAER,OADA9I,EAAY5G,GACL,WACL2G,EAAa,MAEd,CAACC,EAAa5G,EAAU2G,IAEvBP,EAAuB,cAAC+L,GAAD,CAAkB5J,QAAQ,uBAGnD,cAACoH,EAAA,EAAD,UACE,cAACA,EAAA,EAAKC,OAAN,CAAavD,MAAO,GAApB,SACGlG,GACC,qCACE,cAAC,GAAD,CAAeA,QAASA,IACxB,cAAC,GAAD,CAAeA,QAASA,c,2BCpBrB,SAASsT,GAAT,GAAiE,IAA9BC,EAA6B,EAAxCC,UAAyBC,EAAe,mBAE9D1H,EACX/H,IADF7G,UAAa4O,WAEf,OACE,cAAC,KAAD,2BACM0H,GADN,IAEEpI,OAAQ,SAACnB,GAAD,OACN6B,EAAa,cAACwH,EAAD,eAAerJ,IAAY,cAAC,KAAD,CAAUxF,GAAG,UC0D9CR,oBAzDf,WACE,IAAMwP,EAAWC,eACjB,EAAmC3P,IAA3BjN,EAAR,EAAQA,YAAaoG,EAArB,EAAqBA,UAUrB,OARAoM,qBAAU,WACJxS,EAAYF,MACdsG,EAAUyE,UAAUgS,SAAQ,kBAAM7c,EAAYgL,kBAE9ChL,EAAYgL,iBAEb,CAAChL,EAAaoG,IAEZpG,EAAY+K,UAIf,qCACE,cAAC,IAAD,CAAgBsD,SAAS,eAAeyO,iBAAe,IACvD,cAAC,GAAD,IACA,cAAC,KAAD,CAAOlP,OAAK,EAACmP,KAAK,IAAIN,UAAWO,KACjC,cAAC,KAAD,CACED,KAAI,QACJzI,OAAQ,kBACN,qCACE,cAAC,EAAD,IACA,cAAC/G,EAAA,EAAD,CAAWS,MAAO,CAAE2D,UAAW,OAA/B,SACE,eAAC,KAAD,WACE,cAAC4K,GAAD,CACE3O,OAAK,EACLmP,KAAK,cACLN,UAAWQ,KAEb,cAACV,GAAD,CACEQ,KAAK,kBACLN,UAAWS,KAEb,cAACX,GAAD,CAEEQ,KAAM,CAAC,kBAAmB,eAC1BN,UAAWU,IAFNR,EAAS3b,KAIhB,cAACub,GAAD,CACEQ,KAAK,sBACLN,UAAWW,KAEb,cAAC,KAAD,CAAOL,KAAK,UAAUN,UAAWrE,KACjC,cAAC,KAAD,CAAO2E,KAAK,gBAAgBN,UAAWY,KACvC,cAAC,KAAD,CAAOZ,UAAWjE,mBAlCvB,cAACvD,GAAD,CAAkB5J,QAAQ,qBClBtBiS,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqB/b,MAAK,YAAkD,IAA/Cgc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,SCNC,SAASO,KACtB,IAAQC,EAAanB,eAAbmB,SAMR,OAJAvL,qBAAU,WACR9H,OAAOsT,SAAS,EAAG,KAClB,CAACD,IAEG,KCIF,IAAMld,GAAUod,eAEvBC,IAAS5J,OACP,cAACvH,EAAaoR,SAAd,CAAuB7Y,MAAOvF,EAA9B,SACE,eAAC,KAAD,CAAQc,QAASA,GAAjB,UACE,cAACid,GAAD,IACA,cAAC,GAAD,SAGJM,SAASC,eAAe,SAM1Bf,O","file":"static/js/main.afc10213.chunk.js","sourcesContent":["export interface Pagination {\n  currentPage: number;\n  itemsPerPage: number;\n  totalItems: number;\n  totalPages: number;\n}\n\nexport class PaginatedResult<T> {\n  data: T;\n  pagination: Pagination;\n\n  constructor(data: T, pagination: Pagination) {\n    this.data = data;\n    this.pagination = pagination;\n  }\n}\n\nexport class PagingParams{\n    pageNumber;\n    pageSize;\n\n    constructor(pageNumber = 1, pageSize = 2){\n        this.pageSize = pageSize;\n        this.pageNumber = pageNumber;\n    }\n}\n","import axios, { AxiosError, AxiosResponse } from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { setTimeout } from \"timers\";\nimport { history } from \"../..\";\nimport { Activity, ActivityFormValues } from \"../models/activity\";\nimport { PaginatedResult } from \"../models/pagination\";\nimport { Photo, Profile, UserActivity } from \"../models/profile\";\nimport { User, UserFormValues } from \"../models/user\";\nimport { store } from \"../stores/store\";\n\nconst sleep = (delay: number) => {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n};\n\n//axios.defaults.baseURL = 'https://localhost:44393/api/';\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\naxios.interceptors.request.use((config) => {\n  const token = store.commonStore.token;\n  if (token) config.headers.Authorization = `Bearer ${token}`;\n  return config;\n});\n\naxios.interceptors.response.use(\n  async (response) => {\n    if (process.env.NODE_ENV === \"development\") await sleep(1000);\n    const pagination = response.headers[\"pagination\"];\n    if (pagination) {\n      response.data = new PaginatedResult(\n        response.data,\n        JSON.parse(pagination)\n      );\n      return response as AxiosResponse<PaginatedResult<any>>;\n    }\n    return response;\n  },\n  (error: AxiosError) => {\n    const { data, status, config } = error.response!;\n    switch (status) {\n      case 400:\n        if (typeof data === \"string\") {\n          toast.error(data);\n        }\n        if (config.method === \"get\" && data.errors.hasOwnProperty(\"id\")) {\n          history.push(\"/not-found\");\n        }\n        if (data.errors) {\n          const modalStateErros = [];\n          for (const key in data.errors) {\n            if (data.errors[key]) {\n              modalStateErros.push(data.errors[key]);\n            }\n          }\n          throw modalStateErros.flat();\n        }\n        break;\n      case 401:\n        toast.error(\"unauthorized\");\n        break;\n      case 404:\n        history.push(\"/not-found\");\n        break;\n      case 500:\n        store.commonStore.setServerError(data);\n        history.push(\"/server-error\");\n        break;\n    }\n    return Promise.reject(error);\n  }\n);\n\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\n\nconst requests = {\n  get: <T>(url: string) => axios.get<T>(url).then(responseBody),\n  post: <T>(url: string, body: {}) =>\n    axios.post<T>(url, body).then(responseBody),\n  put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\n  del: <T>(url: string) => axios.delete<T>(url).then(responseBody),\n};\n\nconst Activities = {\n  list: (params: URLSearchParams) =>\n    axios\n      .get<PaginatedResult<Activity[]>>(\"/activities\", { params })\n      .then(responseBody),\n  details: (id: string) => requests.get<Activity>(`/activities/${id}`),\n  create: (acitivity: ActivityFormValues) =>\n    requests.post<void>(\"/activities\", acitivity),\n  update: (acitivity: ActivityFormValues) =>\n    requests.put<void>(`/activities/${acitivity.id}`, acitivity),\n  delete: (id: string) => requests.del<void>(`/activities/${id}`),\n  attend: (id: string) => requests.post<void>(`/activities/${id}/attend`, {}),\n};\n\nconst Account = {\n  current: () => requests.get<User>(\"/account\"),\n  login: (user: UserFormValues) => requests.post<User>(\"/account/login\", user),\n  register: (user: UserFormValues) =>\n    requests.post<User>(\"/account/register\", user),\n};\n\nconst Profiles = {\n  get: (username: string) => requests.get<Profile>(`/profiles/${username}`),\n  uploadPhoto: (file: Blob) => {\n    let formData = new FormData();\n    formData.append(\"File\", file);\n    return axios.post<Photo>(\"photos\", formData, {\n      headers: { \"Content-type\": \"multipart/form-data\" },\n    });\n  },\n  setMainPhoto: (id: string) => requests.post(`/photos/${id}/setMain`, {}),\n  deletePhoto: (id: string) => requests.del(`/photos/${id}`),\n  updateFollowing: (username: string) =>\n    requests.post(`/follow/${username}`, {}),\n  listFollwing: (username: string, predicate: string) =>\n    requests.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\n  listActivities: (username: string, predicate: string) =>\n    requests.get<UserActivity[]>(\n      `/profiles/${username}/activities?predicate=${predicate}`\n    ),\n};\n\nconst agent = {\n  Activities,\n  Account,\n  Profiles,\n};\n\nexport default agent;\n","import { Profile } from \"./profile\";\n\nexport interface Activity {\n  id: string;\n  title: string;\n  date: Date | null;\n  description: string;\n  category: string;\n  city: string;\n  venue: string;\n  hostUsername: string;\n  isCanceled: boolean;\n  isGoing: boolean;\n  isHost: boolean;\n  host?: Profile;\n  attendees: Profile[];\n}\n\nexport class Activity implements Activity{\n  constructor(init?: ActivityFormValues){\n    Object.assign(this, init);\n  }\n}\n\nexport class ActivityFormValues{\n  id?: string = undefined;\n  title: string = '';\n  category: string = '';\n  description: string = '';\n  date: Date | null = null;\n  city: string = '';\n  venue: string = '';\n\n  constructor(activity?: ActivityFormValues){\n    if(activity){\n      this.id = activity.id;\n      this.title = activity.title;\n      this.category = activity.category;\n      this.description = activity.description;\n      this.date = activity.date;\n      this.venue = activity.venue;\n      this.city = activity.city;\n    }\n  }\n}\n","import { User } from \"./user\";\n\nexport interface Profile {\n  username: string;\n  displayName: string;\n  image?: string;\n  bio?: string;\n  followersCount: number;\n  followingCount: number;\n  following: boolean;\n  photos?: Photo[];\n}\n\nexport class Profile implements Profile {\n  constructor(user: User) {\n    this.username = user.userName;\n    this.displayName = user.displayName;\n    this.image = user.image;\n  }\n}\n\nexport interface Photo {\n  id: string;\n  url: string;\n  isMain: boolean;\n}\n\nexport interface UserActivity {\n  id: string;\n  title: string;\n  category: string;\n  date: Date;\n}\n","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\nimport agent from \"../api/agent\";\nimport { Activity, ActivityFormValues } from \"../models/activity\";\nimport { format } from \"date-fns\";\nimport { store } from \"./store\";\nimport { Profile } from \"../models/profile\";\nimport { Pagination, PagingParams } from \"../models/pagination\";\n\nexport default class ActivityStore {\n  activityResgistry = new Map<string, Activity>();\n  selectedActivity: Activity | undefined = undefined;\n  editMode = false;\n  loading = false;\n  loadingInitial = false;\n  pagination: Pagination | null = null;\n  pagingParams = new PagingParams();\n  predicate = new Map().set(\"all\", true);\n\n  constructor() {\n    makeAutoObservable(this);\n\n    reaction(\n      () => this.predicate.keys(),\n      () => {\n        this.pagingParams = new PagingParams();\n        this.activityResgistry.clear();\n        this.loadActivities();\n      }\n    );\n  }\n\n  setPagingParams = (pagingParams: PagingParams) => {\n    this.pagingParams = pagingParams;\n  };\n\n  setPredicate = (predicate: string, value: string | Date) => {\n    const resetPredicate = () => {\n      this.predicate.forEach((value, key) => {\n        if (key !== \"startDate\") this.predicate.delete(key);\n      });\n    };\n    switch (predicate) {\n      case \"all\":\n        resetPredicate();\n        this.predicate.set(\"all\", true);\n        break;\n      case \"isGoing\":\n        resetPredicate();\n        this.predicate.set(\"isGoing\", true);\n        break;\n      case \"isHost\":\n        resetPredicate();\n        this.predicate.set(\"isHost\", true);\n        break;\n      case \"startDate\":\n        this.predicate.delete(\"startDate\");\n        this.predicate.set(\"startDate\", value);\n    }\n  };\n\n  get axiosParams() {\n    const params = new URLSearchParams();\n    params.append(\"pageNumber\", this.pagingParams.pageNumber.toString());\n    params.append(\"pageSize\", this.pagingParams.pageSize.toString());\n    this.predicate.forEach((value, key) => {\n      if (key === \"startDate\") {\n        params.append(key, (value as Date).toISOString());\n      } else {\n        params.append(key, value);\n      }\n    });\n    return params;\n  }\n\n  get activitiesByDate() {\n    return Array.from(this.activityResgistry.values()).sort(\n      (a, b) => a.date!.getTime() - b.date!.getTime()\n    );\n  }\n\n  get groupedActivities() {\n    return Object.entries(\n      this.activitiesByDate.reduce((activities, activity) => {\n        const date = format(activity.date!, \"dd MMM yyyy\");\n        activities[date] = activities[date]\n          ? [...activities[date], activity]\n          : [activity];\n        return activities;\n      }, {} as { [key: string]: Activity[] })\n    );\n  }\n\n  loadActivities = async () => {\n    this.loadingInitial = true;\n    try {\n      const result = await agent.Activities.list(this.axiosParams);\n      result.data.forEach((activity) => {\n        this.setActivity(activity);\n      });\n      this.setPagination(result.pagination);\n      this.setLoadingInitial(false);\n    } catch (error) {\n      console.log(error);\n      this.setLoadingInitial(false);\n    }\n  };\n\n  setPagination = (pagination: Pagination) => {\n    this.pagination = pagination;\n  };\n\n  loadActivity = async (id: string) => {\n    let activity = this.getActivity(id);\n    if (activity) {\n      this.selectedActivity = activity;\n      return activity;\n    } else {\n      this.loadingInitial = true;\n      try {\n        activity = await agent.Activities.details(id);\n        this.setActivity(activity);\n        runInAction(() => {\n          this.selectedActivity = activity;\n        });\n        this.setLoadingInitial(false);\n        return activity;\n      } catch (error) {\n        console.log(error);\n        this.setLoadingInitial(false);\n      }\n    }\n  };\n\n  private setActivity = (activity: Activity) => {\n    const user = store.userStore.user;\n\n    if (user) {\n      activity.isGoing = activity.attendees!.some(\n        (a) => a.displayName === user.displayName\n      );\n      activity.isHost =\n        activity.hostUsername === user.displayName.toLowerCase();\n      activity.host = activity.attendees?.find(\n        (x) => x.username === activity.hostUsername\n      );\n    }\n    activity.date = new Date(activity.date!);\n    this.activityResgistry.set(activity.id, activity);\n  };\n\n  private getActivity = (id: string) => {\n    return this.activityResgistry.get(id);\n  };\n\n  setLoadingInitial = (state: boolean) => {\n    this.loadingInitial = state;\n  };\n\n  createActivity = async (activity: ActivityFormValues) => {\n    const user = store.userStore.user;\n    const attendee = new Profile(user!);\n    try {\n      await agent.Activities.create(activity);\n      const newActivity = new Activity(activity);\n      newActivity.hostUsername = user!.userName;\n      newActivity.attendees = [attendee];\n      this.setActivity(newActivity);\n      runInAction(() => {\n        this.selectedActivity = newActivity;\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  updateActivity = async (activity: ActivityFormValues) => {\n    try {\n      await agent.Activities.update(activity);\n      runInAction(() => {\n        if (activity.id) {\n          let updatedActivity = {\n            ...this.getActivity(activity.id),\n            ...activity,\n          };\n          this.activityResgistry.set(activity.id, updatedActivity as Activity);\n          this.selectedActivity = updatedActivity as Activity;\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  deleteActivity = async (id: string) => {\n    this.loading = true;\n    try {\n      await agent.Activities.delete(id);\n      runInAction(() => {\n        this.activityResgistry.delete(id);\n        this.loading = false;\n      });\n    } catch (error) {\n      console.log(error);\n      runInAction(() => {\n        this.loading = false;\n      });\n    }\n  };\n\n  updateAttendance = async () => {\n    const user = store.userStore.user;\n    this.loading = true;\n    try {\n      await agent.Activities.attend(this.selectedActivity!.id);\n      runInAction(() => {\n        if (this.selectedActivity?.isGoing) {\n          this.selectedActivity.attendees =\n            this.selectedActivity.attendees?.filter?.(\n              (a) => a.username !== user?.userName\n            );\n          this.selectedActivity.isGoing = false;\n        } else {\n          const attendee = new Profile(user!);\n          this.selectedActivity?.attendees?.push(attendee);\n          this.selectedActivity!.isGoing = true;\n        }\n        this.activityResgistry.set(\n          this.selectedActivity!.id,\n          this.selectedActivity!\n        );\n      });\n    } catch (error) {\n    } finally {\n      runInAction(() => (this.loading = false));\n    }\n  };\n\n  cancelActivityToggle = async () => {\n    this.loading = true;\n    try {\n      await agent.Activities.attend(this.selectedActivity!.id);\n      runInAction(() => {\n        this.selectedActivity!.isCanceled = !this.selectedActivity?.isCanceled;\n        this.activityResgistry.set(\n          this.selectedActivity!.id,\n          this.selectedActivity!\n        );\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      runInAction(() => (this.loading = false));\n    }\n  };\n\n  clearSelectedActivity = () => {\n    this.selectedActivity = undefined;\n  };\n\n  updateAttendeeFollowing = (username: string) => {\n    this.activityResgistry.forEach((activity) => {\n      activity.attendees.forEach((attendee) => {\n        if (attendee.username === username) {\n          attendee.following\n            ? attendee.followingCount--\n            : attendee.followingCount++;\n          attendee.following = !attendee.following;\n        }\n      });\n    });\n  };\n}\n","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\nimport agent from \"../api/agent\";\nimport { Photo, Profile, UserActivity } from \"../models/profile\";\nimport { store } from \"./store\";\n\nexport default class ProfileStore {\n  profile: Profile | null = null;\n  loadingProfile = false;\n  uploading = false;\n  loading = false;\n  followings: Profile[] = [];\n  loadingFollowings = false;\n  activeTab = 0;\n  userActivities: UserActivity[] = [];\n  loadingActivities = false;\n\n  constructor() {\n    makeAutoObservable(this);\n\n    reaction(\n      () => this.activeTab,\n      (activeTab) => {\n        if (activeTab === 3 || this.activeTab === 4) {\n          const predicate = activeTab === 3 ? \"followers\" : \"following\";\n          this.loadFollowings(predicate);\n        } else {\n          this.followings = [];\n        }\n      }\n    );\n  }\n\n  setActiveTab = (activeTab: any) => {\n    this.activeTab = activeTab;\n  };\n\n  get isCurrentUser() {\n    if (store.userStore.user && this.profile) {\n      return store.userStore.user.userName === this.profile.username;\n    }\n    return false;\n  }\n\n  loadProfile = async (username: string) => {\n    this.loadingProfile = true;\n    try {\n      const profile = await agent.Profiles.get(username);\n      runInAction(() => {\n        this.profile = profile;\n        this.loadingProfile = false;\n      });\n    } catch (error) {\n      console.log(error);\n      runInAction(() => (this.loadingProfile = false));\n    }\n  };\n\n  uploadPhoto = async (file: Blob) => {\n    this.uploading = true;\n    try {\n      const response = await agent.Profiles.uploadPhoto(file);\n      const photo = response.data;\n      runInAction(() => {\n        if (this.profile) {\n          this.profile.photos?.push(photo);\n          if (photo.isMain && store.userStore.user) {\n            store.userStore.setImage(photo.url);\n            this.profile.image = photo.url;\n          }\n        }\n        this.uploading = false;\n      });\n    } catch (error) {\n      console.log(error);\n      runInAction(() => (this.uploading = false));\n    }\n  };\n\n  setMainPhoto = async (photo: Photo) => {\n    this.loading = true;\n    try {\n      await agent.Profiles.setMainPhoto(photo.id);\n      store.userStore.setImage(photo.url);\n      runInAction(() => {\n        if (this.profile && this.profile.photos) {\n          this.profile.photos.find((p) => p.isMain)!.isMain = false;\n          this.profile.photos.find((p) => p.id === photo.id)!.isMain = true;\n          this.profile.image = photo.url;\n          this.loading = false;\n        }\n      });\n    } catch (error) {\n      runInAction(() => (this.loading = false));\n      console.log(error);\n    }\n  };\n\n  deletePhoto = async (photo: Photo) => {\n    this.loading = true;\n    try {\n      await agent.Profiles.deletePhoto(photo.id);\n      runInAction(() => {\n        if (this.profile) {\n          this.profile.photos = this.profile.photos?.filter(\n            (p) => p.id !== photo.id\n          );\n          this.loading = false;\n        }\n      });\n    } catch (error) {\n      runInAction(() => (this.loading = false));\n      console.log(error);\n    }\n  };\n\n  updateFollowing = async (username: string, following: boolean) => {\n    this.loading = true;\n    try {\n      await agent.Profiles.updateFollowing(username);\n      store.activityStore.updateAttendeeFollowing(username);\n      runInAction(() => {\n        if (\n          this.profile &&\n          this.profile.username !== store.userStore.user?.userName &&\n          this.profile.username === username\n        ) {\n          following\n            ? this.profile.followersCount++\n            : this.profile.followersCount--;\n          this.profile.following = !this.profile.following;\n        }\n        if (\n          this.profile &&\n          this.profile.username === store.userStore.user?.userName\n        ) {\n          following\n            ? this.profile.followingCount++\n            : this.profile.followingCount--;\n        }\n        this.followings.forEach((profile) => {\n          if (profile.username === username) {\n            profile.following\n              ? profile.followersCount--\n              : profile.followersCount++;\n            profile.following = !profile.following;\n          }\n        });\n        this.loading = false;\n      });\n    } catch (error) {\n      console.log(error);\n      runInAction(() => (this.loading = false));\n    }\n  };\n\n  loadFollowings = async (predicate: string) => {\n    this.loadingFollowings = true;\n    try {\n      const followings = await agent.Profiles.listFollwing(\n        this.profile!.username,\n        predicate\n      );\n      runInAction(() => {\n        this.followings = followings;\n        this.loadingFollowings = false;\n      });\n    } catch (error) {\n      console.log(error);\n      runInAction(() => (this.loadingFollowings = false));\n    }\n  };\n\n  loadUserActivities = async (username: string, predicate?: string) => {\n    this.loadingActivities = true;\n    try {\n      const activities = await agent.Profiles.listActivities(\n        username,\n        predicate!\n      );\n      runInAction(() => {\n        this.userActivities = activities;\n        this.loadingActivities = false;\n      });\n    } catch (error) {\n      console.log(error);\n      runInAction(() => {\n        this.loadingActivities = false;\n      });\n    }\n  };\n}\n","import { makeAutoObservable, runInAction } from \"mobx\";\nimport { history } from \"../..\";\nimport agent from \"../api/agent\";\nimport { User, UserFormValues } from \"../models/user\";\nimport { store } from \"./store\";\n\nexport default class UserStore {\n  user: User | null = null;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  get isLoggedIn() {\n    return !!this.user;\n  }\n\n  login = async (creds: UserFormValues) => {\n    try {\n      const user = await agent.Account.login(creds);\n      store.commonStore.setToken(user.token);\n      runInAction(() => (this.user = user));\n      history.push(\"/activities\");\n      store.modalStore.closeModal();\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  logout = () => {\n    store.commonStore.setToken(null);\n    window.localStorage.removeItem(\"jwt\");\n    this.user = null;\n    history.push(\"/\");\n  };\n\n  getUser = async () => {\n    try {\n      const user = await agent.Account.current();\n      runInAction(() => (this.user = user));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  register = async (creds: UserFormValues) => {\n    try {\n      const user = await agent.Account.register(creds);\n      store.commonStore.setToken(user.token);\n      runInAction(() => (this.user = user));\n      history.push(\"/activities\");\n      store.modalStore.closeModal();\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  setImage = (image: string) => {\n    if (this.user) this.user.image = image;\n  };\n}\n","import { createContext, useContext } from \"react\";\nimport ActivityStore from \"./activityStore\";\nimport CommentStore from \"./commentStore\";\nimport CommonStore from \"./commonStore\";\nimport ModalStore from \"./modalStore\";\nimport ProfileStore from \"./profileStore\";\nimport UserStore from \"./userStore\";\n\ninterface Store {\n  activityStore: ActivityStore;\n  commonStore: CommonStore;\n  userStore: UserStore;\n  modalStore: ModalStore;\n  profileStore: ProfileStore;\n  commentStore: CommentStore;\n}\n\nexport const store: Store = {\n  activityStore: new ActivityStore(),\n  commonStore: new CommonStore(),\n  userStore: new UserStore(),\n  modalStore: new ModalStore(),\n  profileStore: new ProfileStore(),\n  commentStore: new CommentStore(),\n};\n\nexport const StoreContext = createContext(store);\n\nexport function useStore() {\n  return useContext(StoreContext);\n}\n","import { makeAutoObservable, reaction } from \"mobx\";\nimport { ServerError } from \"../models/serverError\";\n\nexport default class CommonStore {\n  error: ServerError | null = null;\n  token: string | null = window.localStorage.getItem(\"jwt\");\n  appLoaded = false;\n\n  constructor() {\n    makeAutoObservable(this);\n\n    reaction(\n      () => this.token,\n      (token) => {\n        if (token) {\n          window.localStorage.setItem(\"jwt\", token);\n        } else {\n          window.localStorage.removeItem(\"jwt\");\n        }\n      }\n    );\n  }\n\n  setServerError = (error: ServerError) => {\n    this.error = error;\n  };\n\n  setToken = (token: string | null) => {\n    this.token = token;\n  };\n\n  setAppLoaded = () => {\n    this.appLoaded = true;\n  };\n}\n","import { makeAutoObservable } from \"mobx\";\n\ninterface Modal {\n  open: boolean;\n  body: JSX.Element | null;\n}\n\nexport default class ModalStore {\n  modal: Modal = {\n    open: false,\n    body: null,\n  };\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  openModal = (content: JSX.Element) => {\n    this.modal.open = true;\n    this.modal.body = content;\n  };\n\n  closeModal = () => {\n    this.modal.open = false;\n    this.modal.body = null;\n  };\n}\n","import {\n  HubConnection,\n  HubConnectionBuilder,\n  LogLevel,\n} from \"@microsoft/signalr\";\nimport { makeAutoObservable, runInAction } from \"mobx\";\nimport { ChatComment } from \"../models/comments\";\nimport { store } from \"./store\";\n\nexport default class CommentStore {\n  comments: ChatComment[] = [];\n  hubConnection: HubConnection | null = null;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  createHubConnection = (activityId: string) => {\n    if (store.activityStore.selectedActivity) {\n      this.hubConnection = new HubConnectionBuilder()\n        .withUrl(process.env.REACT_APP_CHAT_URL + \"?activityId=\" + activityId, {\n          accessTokenFactory: () => store.userStore.user?.token!,\n        })\n        .withAutomaticReconnect()\n        .configureLogging(LogLevel.Information)\n        .build();\n\n      this.hubConnection\n        .start()\n        .catch((error) =>\n          console.log(\"Error establishing the connection: \" + error)\n        );\n\n      this.hubConnection.on(\"LoadComments\", (comments: ChatComment[]) => {\n        runInAction(() => {\n          comments.forEach((comment) => {\n            comment.createdAt = new Date(comment.createdAt + \"Z\");\n          });\n          this.comments = comments;\n        });\n      });\n\n      this.hubConnection.on(\"ReceiveComment\", (comment: ChatComment) => {\n        runInAction(() => {\n          comment.createdAt = new Date(comment.createdAt);\n          this.comments.unshift(comment);\n        });\n      });\n    }\n  };\n\n  stopHubConnection = () => {\n    this.hubConnection\n      ?.stop()\n      .catch((error) => console.log(\"Error stopping connection: \", error));\n  };\n\n  clearComments = () => {\n    this.comments = [];\n    this.stopHubConnection();\n  };\n\n  addComment = async (values: any) => {\n    values.activityId = store.activityStore.selectedActivity?.id;\n\n    try {\n      await this.hubConnection?.invoke(\"SendComment\", values);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { Button, Container, Dropdown, Image, Menu } from \"semantic-ui-react\";\nimport { useStore } from \"../stores/store\";\n\n\nexport default observer(function NavBar() {\n  const {userStore: {user, logout}} = useStore();\n  return (\n    <Menu inverted fixed=\"top\">\n      <Container>\n        <Menu.Item as={NavLink} to=\"/\" exact header>\n          <img\n            src=\"/assets/logo.png\"\n            alt=\"logo\"\n            style={{ marginRight: \"10px\" }}\n          />\n          Reactivities\n        </Menu.Item>\n        <Menu.Item as={NavLink} to=\"/activities\" name=\"Activities\" />\n        <Menu.Item as={NavLink} to=\"/errors\" name=\"Errors\" />\n        <Menu.Item>\n          <Button as={NavLink} to=\"/createActivity\" positive content=\"Create Activity\" />\n        </Menu.Item>\n        <Menu.Item position='right' >\n          <Image src={user?.image || '/assets/user.png'} avatar spaced='right'/>\n          <Dropdown pointing='top left' text={user?.displayName}>\n            <Dropdown.Menu>\n              <Dropdown.Item as={Link} to={`/profiles/${user?.userName}`} text='My Profile' icon='user' />\n              <Dropdown.Item onClick={logout} text='Logout' icon='power'/>\n            </Dropdown.Menu>\n            \n          </Dropdown>\n        </Menu.Item>\n      </Container>\n    </Menu>\n  );\n})\n","import { observer } from \"mobx-react-lite\";\nimport React, { SyntheticEvent } from \"react\";\nimport { Button, Reveal } from \"semantic-ui-react\";\nimport { Profile } from \"../../app/models/profile\";\nimport { useStore } from \"../../app/stores/store\";\n\ninterface Props {\n  profile: Profile;\n}\n\nexport default observer(function FollowButton({ profile }: Props) {\n  const { profileStore, userStore } = useStore();\n  const { updateFollowing, loading } = profileStore;\n\n  if (userStore.user?.userName === profile.username) return null;\n\n  function handleFollow(e: SyntheticEvent, username: string) {\n    e.preventDefault();\n    profile.following\n      ? updateFollowing(username, false)\n      : updateFollowing(username, true);\n  }\n\n  return (\n    <Reveal animated=\"move\">\n      <Reveal.Content visible style={{ width: \"100%\" }}>\n        <Button\n          fluid\n          color=\"teal\"\n          content={profile.following ? \"Following\" : \"Not following\"}\n        />\n      </Reveal.Content>\n      <Reveal.Content hidden style={{ width: \"100%\" }}>\n        <Button\n          fluid\n          basic\n          color={profile.following ? \"red\" : \"green\"}\n          content={profile.following ? \"Unfollow\" : \"Follow\"}\n          loading={loading}\n          onClick={(e) => handleFollow(e, profile.username)}\n        />\n      </Reveal.Content>\n    </Reveal>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Card, CardDescription, Icon, Image } from \"semantic-ui-react\";\nimport { Profile } from \"../../app/models/profile\";\nimport FollowButton from \"./FollowButton\";\n\ninterface Props {\n  profile: Profile;\n}\n\nexport default observer(function ProfileCard({ profile }: Props) {\n  return (\n    <Card as={Link} to={`/profiles/${profile.username}`}>\n      <Image src={profile.image || \"/assets/user.png\"} />\n      <Card.Content>\n        <Card.Header>{profile.displayName}</Card.Header>\n        <CardDescription>Bio goes here</CardDescription>\n      </Card.Content>\n      <Card.Content extra>\n        <Icon name=\"user\" />\n        {profile.followersCount} followers\n      </Card.Content>\n      <FollowButton profile={profile} />\n    </Card>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { List, Image, Popup } from \"semantic-ui-react\";\nimport { Profile } from \"../../../app/models/profile\";\nimport ProfileCard from \"../../profiles/ProfileCard\";\n\ninterface Props{\n    attendees: Profile[];\n}\n\nexport default observer(function ActivityListItemAttendee({attendees}: Props){\n    const styles = {\n        borderColor: 'orange',\n        borderWidth: 3\n    }\n\n    return(\n        <List horizontal>\n            {attendees.map(attendee => (\n                <Popup\n                    hoverable\n                    key={attendee.username}\n                    trigger={\n                        <List.Item key={attendee.username} as={Link} to={`/profiles/${attendee.username}`}>\n                        <Image \n                            size='mini' \n                            circular src={attendee.image || '/assets/user.png' } \n                            bordered\n                            style={attendee.following ? styles: null}\n                        />\n                        </List.Item>     \n                    }\n                >\n                    <Popup.Content>\n                        <ProfileCard profile={attendee} />\n                    </Popup.Content>\n                </Popup>\n                   \n            ))}\n        </List>\n    )\n})","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Icon, Item, Label, Segment } from \"semantic-ui-react\";\nimport { Activity } from \"../../../app/models/activity\";\nimport { format } from \"date-fns\";\nimport ActivityListItemAttendee from \"./ActivityListItemAttendee\";\n\ninterface Props {\n  activity: Activity;\n}\n\nexport default function ActivityListItem({ activity }: Props) {\n  return (\n    <Segment.Group>\n      <Segment>\n        {activity.isCanceled && (\n          <Label\n            attached=\"top\"\n            color=\"red\"\n            content=\"Canceled\"\n            style={{ textAlign: \"center\" }}\n          />\n        )}\n\n        <Item.Group>\n          <Item>\n            <Item.Image\n              style={{ marginBottom: 3 }}\n              size=\"tiny\"\n              circular\n              src={activity.host?.image || \"/assets/user.png\"}\n            />\n            <Item.Content>\n              <Item.Header as={Link} to={`/activities/${activity.id}`}>\n                {activity.title}\n              </Item.Header>\n              <Item.Description>\n                Hosted by{\" \"}\n                <Link to={`/profiles/${activity.hostUsername}`}>\n                  {activity.host?.displayName}\n                </Link>\n              </Item.Description>\n              {activity.isHost && (\n                <Item.Description>\n                  <Label basic color=\"orange\">\n                    You are hosting this activity\n                  </Label>\n                </Item.Description>\n              )}\n              {activity.isGoing && !activity.isHost && (\n                <Item.Description>\n                  <Label basic color=\"green\">\n                    You are going to this activity\n                  </Label>\n                </Item.Description>\n              )}\n            </Item.Content>\n          </Item>\n        </Item.Group>\n      </Segment>\n      <Segment>\n        <span>\n          <Icon name=\"clock\" />\n          {format(activity.date!, \"dd MMM yyyy h:mm aa\")}\n          <Icon name=\"marker\" /> {activity.venue}\n        </span>\n      </Segment>\n      <Segment secondary>\n        <ActivityListItemAttendee attendees={activity.attendees!} />\n      </Segment>\n      <Segment clearing>\n        <span>{activity.description}</span>\n        <Button\n          as={Link}\n          to={`/activities/${activity.id}`}\n          color=\"teal\"\n          floated=\"right\"\n          content=\"View\"\n        />\n      </Segment>\n    </Segment.Group>\n  );\n}\n","import React, { Fragment } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { Header } from \"semantic-ui-react\";\nimport { useStore } from \"../../../app/stores/store\";\nimport ActivityListItem from \"./ActivityListItem\";\n\nexport default observer(function ActivityList() {\n  const { activityStore } = useStore();\n  const { groupedActivities } = activityStore;\n\n  return (\n    <>\n      {groupedActivities.map(([group, activities]) => (\n        <Fragment key={group}>\n          <Header sub color=\"teal\">\n            {group}\n          </Header>\n          {activities.map((activity) => (\n            <ActivityListItem key={activity.id} activity={activity} />\n          ))}\n        </Fragment>\n      ))}\n    </>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport Calendar from \"react-calendar\";\nimport { Header, Menu } from \"semantic-ui-react\";\nimport { useStore } from \"../../../app/stores/store\";\n\nexport default observer(function ActivityFilters() {\n  const {\n    activityStore: { predicate, setPredicate },\n  } = useStore();\n  return (\n    <>\n      <Menu vertical size=\"large\" style={{ width: \"100%\", marginTop: 25 }}>\n        <Header icon=\"filter\" attached color=\"teal\" content=\"Filters\" />\n        <Menu.Item\n          content=\"All Activities\"\n          active={predicate.has(\"all\")}\n          onClick={() => setPredicate(\"all\", \"true\")}\n        />\n        <Menu.Item\n          content=\"I'm going\"\n          active={predicate.has(\"isGoing\")}\n          onClick={() => setPredicate(\"isGoing\", \"true\")}\n        />\n        <Menu.Item\n          content=\"I'm hosting\"\n          active={predicate.has(\"isHost\")}\n          onClick={() => setPredicate(\"isHost\", \"true\")}\n        />\n      </Menu>\n      <Header />\n      <Calendar\n        onChange={(date: Date) => setPredicate(\"startDate\", date as Date)}\n        value={predicate.get(\"startDate\") || new Date()}\n      />\n    </>\n  );\n});\n","import React, { Fragment } from \"react\";\nimport { Segment, Button, Placeholder } from \"semantic-ui-react\";\n\nexport default function ActivityListItemPlaceholder() {\n  return (\n    <Fragment>\n      <Placeholder fluid style={{ marginTop: 25 }}>\n        <Segment.Group>\n          <Segment style={{ minHeight: 110 }}>\n            <Placeholder>\n              <Placeholder.Header image>\n                <Placeholder.Line />\n                <Placeholder.Line />\n              </Placeholder.Header>\n              <Placeholder.Paragraph>\n                <Placeholder.Line />\n              </Placeholder.Paragraph>\n            </Placeholder>\n          </Segment>\n          <Segment>\n            <Placeholder>\n              <Placeholder.Line />\n              <Placeholder.Line />\n            </Placeholder>\n          </Segment>\n          <Segment secondary style={{ minHeight: 70 }} />\n          <Segment clearing>\n            <Button disabled color=\"blue\" floated=\"right\" content=\"View\" />\n          </Segment>\n        </Segment.Group>\n      </Placeholder>\n    </Fragment>\n  );\n}\n","import { observer } from \"mobx-react-lite\";\nimport React, { useEffect, useState } from \"react\";\nimport { Grid, Loader } from \"semantic-ui-react\";\nimport { useStore } from \"../../../app/stores/store\";\nimport ActivityList from \"./ActivityList\";\nimport ActivityFilters from \"./ActivityFilters\";\nimport { PagingParams } from \"../../../app/models/pagination\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport ActivityListItemPlaceholder from \"./ActivityListItemPlaceholder\";\n\nexport default observer(function ActivityDashboard() {\n  const { activityStore } = useStore();\n  const { loadActivities, activityResgistry, setPagingParams, pagination } =\n    activityStore;\n  const [loadingNext, setLoadingNext] = useState(false);\n\n  function handleGetNext() {\n    setLoadingNext(true);\n    setPagingParams(new PagingParams(pagination!.currentPage + 1));\n    loadActivities().then(() => setLoadingNext(false));\n  }\n\n  useEffect(() => {\n    if (activityResgistry.size <= 1) loadActivities();\n  }, [activityResgistry.size, loadActivities]);\n\n  return (\n    <Grid>\n      <Grid.Column width=\"10\">\n        {activityStore.loadingInitial && !loadingNext ? (\n          <>\n            <ActivityListItemPlaceholder />\n            <ActivityListItemPlaceholder />\n          </>\n        ) : (\n          <InfiniteScroll\n            pageStart={0}\n            loadMore={handleGetNext}\n            hasMore={\n              !loadingNext &&\n              !!pagination &&\n              pagination.currentPage < pagination.totalPages\n            }\n            initialLoad={false}\n          >\n            <ActivityList />\n          </InfiniteScroll>\n        )}\n      </Grid.Column>\n      <Grid.Column width=\"6\">\n        <ActivityFilters />\n      </Grid.Column>\n      <Grid.Column width={10}>\n        <Loader active={loadingNext} />\n      </Grid.Column>\n    </Grid>\n  );\n});\n","import { useField } from \"formik\";\nimport React from \"react\";\nimport { Form, Label } from \"semantic-ui-react\";\n\ninterface Props {\n    placeholder: string;\n    name: string;\n    type?: string;\n    label?: string;    \n}\n\nexport default function MyTextInput(props: Props){\n    const [field, meta] = useField(props.name);\n    return (\n        <Form.Field error={meta.touched && !!meta.error}>\n            <label>{props.label}</label>\n            <input {...field} {...props} />\n            {meta.touched && meta.error ? (\n                <Label basic color='red'>{meta.error}</Label>\n            ): null}\n        </Form.Field>\n    )\n}","import { ErrorMessage, Form, Formik } from \"formik\";\nimport { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Button, Header, Label } from \"semantic-ui-react\";\nimport MyTextInput from \"../../app/commom/form/MyTextInput\";\nimport { useStore } from \"../../app/stores/store\";\n\nexport default observer(function LoginForm() {\n  const { userStore } = useStore();\n  return (\n    <Formik\n      initialValues={{ email: \"\", password: \"\", error: null }}\n      onSubmit={(values, { setErrors }) =>\n        userStore\n          .login(values)\n          .catch((error) => setErrors({ error: \"Invalid email or password\" }))\n      }\n    >\n      {({ handleSubmit, isSubmitting, errors }) => (\n        <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\n          <Header\n            as=\"h2\"\n            content=\"Login to Reactivites\"\n            color=\"teal\"\n            textAlign=\"center\"\n          />\n          <MyTextInput name=\"email\" placeholder=\"Email\" />\n          <MyTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\n          <ErrorMessage\n            name=\"error\"\n            render={() => (\n              <Label\n                style={{ marginBottom: 10 }}\n                basic\n                color=\"red\"\n                content={errors.error}\n              />\n            )}\n          />\n          <Button\n            loading={isSubmitting}\n            positive\n            content=\"Login\"\n            type=\"submit\"\n            fluid\n          />\n        </Form>\n      )}\n    </Formik>\n  );\n});\n","import React from \"react\";\nimport { Message } from \"semantic-ui-react\";\n\ninterface Props {\n  errors: any;\n}\n\nexport default function ValidationErrors({ errors }: Props) {\n  return (\n    <Message error>\n      {errors && (\n        <Message.List>\n          {errors.map((err: any, i: any) => (\n            <Message.Item key={i}>{err}</Message.Item>\n          ))}\n        </Message.List>\n      )}\n    </Message>\n  );\n}\n","import { ErrorMessage, Form, Formik } from \"formik\";\nimport { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Button, Header } from \"semantic-ui-react\";\nimport MyTextInput from \"../../app/commom/form/MyTextInput\";\nimport { useStore } from \"../../app/stores/store\";\nimport * as Yup from \"yup\";\nimport ValidationErrors from \"../errors/ValidationErrors\";\n\nexport default observer(function RegisterForm() {\n  const { userStore } = useStore();\n  return (\n    <Formik\n      initialValues={{\n        displayName: \"\",\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        error: null,\n      }}\n      onSubmit={(values, { setErrors }) =>\n        userStore.register(values).catch((error) => setErrors({ error }))\n      }\n      validationSchema={Yup.object({\n        displayName: Yup.string().required(),\n        username: Yup.string().required(),\n        email: Yup.string().required().email(),\n        password: Yup.string().required(),\n      })}\n    >\n      {({ handleSubmit, isSubmitting, errors, isValid, dirty }) => (\n        <Form\n          className=\"ui form error\"\n          onSubmit={handleSubmit}\n          autoComplete=\"off\"\n        >\n          <Header\n            as=\"h2\"\n            content=\"Sign up to Reactivites\"\n            color=\"teal\"\n            textAlign=\"center\"\n          />\n          <MyTextInput name=\"displayName\" placeholder=\"Display Name\" />\n          <MyTextInput name=\"username\" placeholder=\"Username\" />\n          <MyTextInput name=\"email\" placeholder=\"Email\" />\n          <MyTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\n          <ErrorMessage\n            name=\"error\"\n            render={() => <ValidationErrors errors={errors.error} />}\n          />\n          <Button\n            disabled={!isValid || !dirty || isSubmitting}\n            loading={isSubmitting}\n            positive\n            content=\"Register\"\n            type=\"submit\"\n            fluid\n          />\n        </Form>\n      )}\n    </Formik>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Header, Segment, Image, Button } from \"semantic-ui-react\";\nimport { useStore } from \"../../app/stores/store\";\nimport LoginForm from \"../users/LoginForm\";\nimport RegisterForm from \"../users/RegisterForm\";\n\nexport default observer(function HomePage() {\n  const { userStore, modalStore } = useStore();\n  return (\n    <Segment inverted textAlign=\"center\" vertical className=\"masterhead\">\n      <Container text>\n        <Header as=\"h1\" inverted>\n          <Image\n            size=\"massive\"\n            src=\"/assets/logo.png\"\n            alt=\"logo\"\n            style={{ marginBottom: 12 }}\n          />\n          Reactivities\n        </Header>\n        {userStore.isLoggedIn ? (\n          <>\n            <Header as=\"h2\" inverted content=\"Welcome to Reactivities\" />\n            <Button as={Link} to=\"/activities\" size=\"huge\" inverted>\n              Go to activities!\n            </Button>\n          </>\n        ) : (\n          <>\n            <Button\n              onClick={() => modalStore.openModal(<LoginForm />)}\n              size=\"huge\"\n              inverted\n            >\n              Login!\n            </Button>\n            <Button\n              onClick={() => modalStore.openModal(<RegisterForm />)}\n              size=\"huge\"\n              inverted\n            >\n              Register!\n            </Button>\n          </>\n        )}\n      </Container>\n    </Segment>\n  );\n});\n","import React from \"react\";\nimport { Dimmer, Loader } from \"semantic-ui-react\";\n\ninterface Props{\n    inverted?: boolean;\n    content?: string;\n}\n\nexport default function LoadingComponent({inverted = true, content = 'Loading...'}: Props){\n    return(\n        <Dimmer active={true} inverted={inverted}>\n            <Loader content={content} />\n        </Dimmer>\n    )\n}","import { useField } from \"formik\";\nimport React from \"react\";\nimport { Form, Label } from \"semantic-ui-react\";\n\ninterface Props {\n    placeholder: string;\n    name: string;\n    rows: number;\n    label?: string;    \n}\n\nexport default function MyTextArea(props: Props){\n    const [field, meta] = useField(props.name);\n    return (\n        <Form.Field error={meta.touched && !!meta.error}>\n            <label>{props.label}</label>\n            <textarea {...field} {...props} />\n            {meta.touched && meta.error ? (\n                <Label basic color='red'>{meta.error}</Label>\n            ): null}\n        </Form.Field>\n    )\n}","import { useField } from \"formik\";\nimport React from \"react\";\nimport { Form, Label, Select } from \"semantic-ui-react\";\n\ninterface Props {\n    placeholder: string;\n    name: string;\n    options: any;\n    label?: string;    \n}\n\nexport default function MySelectInput(props: Props){\n    const [field, meta, helpers] = useField(props.name);\n    return (\n        <Form.Field error={meta.touched && !!meta.error}>\n            <label>{props.label}</label>\n            <Select \n                clearable\n                options={props.options}\n                value={field.value || null}\n                onChange={(e, d) => helpers.setValue(d.value)}\n                onBlur={() => helpers.setTouched(true)}\n                placeholder={props.placeholder}\n            />\n\n            {meta.touched && meta.error ? (\n                <Label basic color='red'>{meta.error}</Label>\n            ): null}\n        </Form.Field>\n    )\n}","export const categoryOptions = [\n    {text: 'Drinks', value: 'drinks'},\n    {text: 'Culture', value: 'culture'},\n    {text: 'Film', value: 'film'},\n    {text: 'Food', value: 'food'},\n    {text: 'Music', value: 'music'},\n    {text: 'Travel', value: 'travel'}\n]","import { useField } from \"formik\";\nimport React from \"react\";\nimport { Form, Label } from \"semantic-ui-react\";\nimport DatePicker, {ReactDatePickerProps} from \"react-datepicker\";\n\n\nexport default function MyDateInput(props: Partial<ReactDatePickerProps>){\n    const [field, meta, helpers] = useField(props.name!);\n    return (\n        <Form.Field error={meta.touched && !!meta.error}>\n            <DatePicker \n                {...field}\n                {...props}\n                selected={(field.value && new Date(field.value)) || null}\n                onChange={value => helpers.setValue(value)}\n            />\n            {meta.touched && meta.error ? (\n                <Label basic color='red'>{meta.error}</Label>\n            ): null}\n        </Form.Field>\n    )\n}","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { Segment, Form, Button, Header } from \"semantic-ui-react\";\nimport LoadingComponent from \"../../../app/layout/LoadingComponents\";\nimport { useStore } from \"../../../app/stores/store\";\nimport { v4 as uuid } from \"uuid\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport MyTextInput from \"../../../app/commom/form/MyTextInput\";\nimport MyTextArea from \"../../../app/commom/form/MyTextArea\";\nimport MySelectInput from \"../../../app/commom/form/MySelectInput\";\nimport { categoryOptions } from \"../../../app/commom/options/categoryOptions\";\nimport MyDateInput from \"../../../app/commom/form/MyDateInput\";\nimport { ActivityFormValues } from \"../../../app/models/activity\";\n\nexport default observer(function ActivityForm() {\n  const history = useHistory();\n  const { activityStore } = useStore();\n  const { createActivity, updateActivity, loadActivity, loadingInitial } =\n    activityStore;\n  const { id } = useParams<{ id: string }>();\n\n  const [activity, setActivity] = useState<ActivityFormValues>(\n    new ActivityFormValues()\n  );\n\n  const validationSchema = Yup.object({\n    title: Yup.string().required(\"The activity title is required\"),\n    description: Yup.string().required(\"The activity description is required\"),\n    category: Yup.string().required(),\n    date: Yup.string().required(\"Date is required\").nullable(),\n    venue: Yup.string().required(),\n    city: Yup.string().required(),\n  });\n\n  useEffect(() => {\n    if (id)\n      loadActivity(id).then((activity) =>\n        setActivity(new ActivityFormValues(activity))\n      );\n  }, [id, loadActivity]);\n\n  function handleFormSubmit(activity: ActivityFormValues) {\n    if (!activity.id) {\n      let newActivity = {\n        ...activity,\n        id: uuid(),\n      };\n      createActivity(newActivity).then(() =>\n        history.push(`/activities/${newActivity.id}`)\n      );\n    } else {\n      updateActivity(activity).then(() =>\n        history.push(`/activities/${activity.id}`)\n      );\n    }\n  }\n\n  if (loadingInitial) return <LoadingComponent content=\"Loading activity...\" />;\n\n  return (\n    <Segment clearing>\n      <Header content=\"Activity Details\" sub color=\"teal\" />\n      <Formik\n        validationSchema={validationSchema}\n        enableReinitialize\n        initialValues={activity}\n        onSubmit={(values) => handleFormSubmit(values)}\n      >\n        {({ handleSubmit, isValid, isSubmitting, dirty }) => (\n          <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\n            <MyTextInput name=\"title\" placeholder=\"Title\" />\n\n            <MyTextArea rows={3} placeholder=\"Description\" name=\"description\" />\n            <MySelectInput\n              options={categoryOptions}\n              placeholder=\"Category\"\n              name=\"category\"\n            />\n            <MyDateInput\n              placeholderText=\"Date\"\n              name=\"date\"\n              showTimeSelect\n              timeCaption=\"time\"\n              dateFormat=\"MMMM d, yyyy h:m aa\"\n            />\n            <Header content=\"Location Details\" sub color=\"teal\" />\n            <MyTextInput placeholder=\"City\" name=\"city\" />\n            <MyTextInput placeholder=\"Venue\" name=\"venue\" />\n            <Button\n              disabled={isSubmitting || !dirty || !isValid}\n              loading={isSubmitting}\n              floated=\"right\"\n              positive\n              type=\"submit\"\n              content=\"Submit\"\n            />\n            <Button\n              as={Link}\n              to={\"/activities\"}\n              floated=\"right\"\n              type=\"button\"\n              content=\"Cancel\"\n            />\n          </Form>\n        )}\n      </Formik>\n    </Segment>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Header, Item, Segment, Image, Label } from \"semantic-ui-react\";\nimport { Activity } from \"../../../app/models/activity\";\nimport { format } from \"date-fns\";\nimport { useStore } from \"../../../app/stores/store\";\n\nconst activityImageStyle = {\n  filter: \"brightness(30%)\",\n};\n\nconst activityImageTextStyle = {\n  position: \"absolute\",\n  bottom: \"5%\",\n  left: \"5%\",\n  width: \"100%\",\n  height: \"auto\",\n  color: \"white\",\n};\n\ninterface Props {\n  activity: Activity;\n}\n\nexport default observer(function ActivityDetailedHeader({ activity }: Props) {\n  const {\n    activityStore: { updateAttendance, loading, cancelActivityToggle },\n  } = useStore();\n  return (\n    <Segment.Group>\n      <Segment basic attached=\"top\" style={{ padding: \"0\" }}>\n        {activity.isCanceled && (\n          <Label\n            style={{ position: \"absolute\", zIndex: 1000, left: -14, top: 20 }}\n            ribbon\n            color=\"red\"\n            content=\"Canceled\"\n          />\n        )}\n        <Image\n          src={`/assets/categoryImages/${activity.category}.jpg`}\n          fluid\n          style={activityImageStyle}\n        />\n        <Segment style={activityImageTextStyle} basic>\n          <Item.Group>\n            <Item>\n              <Item.Content>\n                <Header\n                  size=\"huge\"\n                  content={activity.title}\n                  style={{ color: \"white\" }}\n                />\n                <p>{format(activity.date!, \"dd MMM yyyy\")}</p>\n                <p>\n                  Hosted by{\" \"}\n                  <strong>\n                    <Link to={`/profiles/${activity.host?.username}`}>\n                      {activity.host?.displayName}\n                    </Link>\n                  </strong>\n                </p>\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Segment>\n      </Segment>\n      <Segment clearing attached=\"bottom\">\n        {activity.isHost ? (\n          <>\n            <Button\n              color={activity.isCanceled ? \"green\" : \"red\"}\n              floated=\"left\"\n              basic\n              content={\n                activity.isCanceled ? \"Re-activate Activity\" : \"Cancel Activity\"\n              }\n              onClick={cancelActivityToggle}\n              loading={loading}\n            />\n            <Button\n              as={Link}\n              disabled={activity.isCanceled}\n              to={`/manage/${activity.id}`}\n              color=\"orange\"\n              floated=\"right\"\n            >\n              Manage Event\n            </Button>\n          </>\n        ) : activity.isGoing ? (\n          <Button loading={loading} onClick={updateAttendance}>\n            Cancel attendance\n          </Button>\n        ) : (\n          <Button\n            disabled={activity.isCanceled}\n            loading={loading}\n            onClick={updateAttendance}\n            color=\"teal\"\n          >\n            Join Activity\n          </Button>\n        )}\n      </Segment>\n    </Segment.Group>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Segment, Grid, Icon } from \"semantic-ui-react\";\nimport { Activity } from \"../../../app/models/activity\";\nimport { format } from \"date-fns\";\n\ninterface Props {\n  activity: Activity;\n}\n\nexport default observer(function ActivityDetailedInfo({ activity }: Props) {\n  return (\n    <Segment.Group>\n      <Segment attached=\"top\">\n        <Grid>\n          <Grid.Column width={1}>\n            <Icon size=\"large\" color=\"teal\" name=\"info\" />\n          </Grid.Column>\n          <Grid.Column width={15}>\n            <p>{activity.description}</p>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n      <Segment attached>\n        <Grid verticalAlign=\"middle\">\n          <Grid.Column width={1}>\n            <Icon name=\"calendar\" size=\"large\" color=\"teal\" />\n          </Grid.Column>\n          <Grid.Column width={15}>\n            <span>{format(activity.date!, \"dd MMM yyy h:mm aa\")}</span>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n      <Segment attached>\n        <Grid verticalAlign=\"middle\">\n          <Grid.Column width={1}>\n            <Icon name=\"marker\" size=\"large\" color=\"teal\" />\n          </Grid.Column>\n          <Grid.Column width={11}>\n            <span>\n              {activity.venue}, {activity.city}\n            </span>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n    </Segment.Group>\n  );\n});\n","import { Formik, Form, Field, FieldProps } from \"formik\";\nimport { observer } from \"mobx-react-lite\";\nimport React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Segment, Header, Comment, Loader } from \"semantic-ui-react\";\nimport { useStore } from \"../../../app/stores/store\";\nimport * as Yup from \"yup\";\nimport { formatDistanceToNow } from \"date-fns/esm\";\n\ninterface Props {\n  activityId: string;\n}\n\nexport default observer(function ActivityDetailedChat({ activityId }: Props) {\n  const { commentStore } = useStore();\n\n  useEffect(() => {\n    if (activityId) {\n      commentStore.createHubConnection(activityId);\n    }\n    return () => {\n      commentStore.clearComments();\n    };\n  }, [commentStore, activityId]);\n\n  return (\n    <>\n      <Segment\n        textAlign=\"center\"\n        attached=\"top\"\n        inverted\n        color=\"teal\"\n        style={{ border: \"none\" }}\n      >\n        <Header>Chat about this event</Header>\n      </Segment>\n      <Segment attached clearing>\n        <Formik\n          onSubmit={(values, { resetForm }) =>\n            commentStore.addComment(values).then(() => resetForm)\n          }\n          initialValues={{ body: \"\" }}\n          validationSchema={Yup.object({\n            body: Yup.string().required(),\n          })}\n        >\n          {({ isSubmitting, isValid, handleSubmit }) => (\n            <Form className=\"ui form\">\n              <Field name=\"body\">\n                {(props: FieldProps) => (\n                  <div style={{ position: \"relative\" }}>\n                    <Loader active={isSubmitting} />\n                    <textarea\n                      placeholder=\"Enter your comment(Enter to submit, SHIT + enter for new line)\"\n                      rows={2}\n                      {...props.field}\n                      onKeyPress={(e) => {\n                        if (e.key === \"Enter\" && e.shiftKey) {\n                          return;\n                        }\n                        if (e.key === \"Enter\" && !e.shiftKey) {\n                          e.preventDefault();\n                          isValid && handleSubmit();\n                        }\n                      }}\n                    />\n                  </div>\n                )}\n              </Field>\n            </Form>\n          )}\n        </Formik>\n        <Comment.Group>\n          {commentStore.comments.map((comment) => (\n            <Comment key={comment.id}>\n              <Comment.Avatar src={comment.image || \"/assets/user.png\"} />\n              <Comment.Content>\n                <Comment.Author as={Link} to={`/profiles/${comment.username}`}>\n                  {comment.displayName}\n                </Comment.Author>\n                <Comment.Metadata>\n                  <div>{formatDistanceToNow(comment.createdAt)} ago</div>\n                </Comment.Metadata>\n                <Comment.Text style={{ whiteSpace: \"pre-wrap\" }}>\n                  {comment.body}\n                </Comment.Text>\n              </Comment.Content>\n            </Comment>\n          ))}\n        </Comment.Group>\n      </Segment>\n    </>\n  );\n});\n","import React from 'react'\nimport { Segment, List, Label, Item, Image } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\nimport { observer } from 'mobx-react-lite'\nimport { Activity } from '../../../app/models/activity'\n\ninterface Props {\n    activity: Activity;\n}\n\nexport default observer(function ActivityDetailedSidebar ({activity: {attendees, host}}: Props) {\n    if(!attendees) return null;\n    return (\n        <>\n            <Segment\n                textAlign='center'\n                style={{ border: 'none' }}\n                attached='top'\n                secondary\n                inverted\n                color='teal'\n            >\n                {attendees.length} {attendees.length === 1 ? 'Person': 'People'} going\n            </Segment>\n            <Segment attached>\n                <List relaxed divided>\n                    {attendees.map(attendee => (\n                        <Item style={{ position: 'relative' }} key={attendee.username}>\n                            {attendee.username === host?.username &&\n                                <Label\n                                style={{ position: 'absolute' }}\n                                color='orange'\n                                ribbon='right'\n                            >\n                                Host\n                            </Label>\n                            }\n                        \n                        <Image size='tiny' src={attendee.image || '/assets/user.png'} />\n                        <Item.Content verticalAlign='middle'>\n                            <Item.Header as='h3'>\n                                <Link to={`/profiles/${attendee.username}`}>{attendee.displayName}</Link>\n                            </Item.Header>\n                            {attendee.following &&\n                            <Item.Extra style={{ color: 'orange' }}>Following</Item.Extra>}\n                        </Item.Content>\n                    </Item>\n                    ))}\n                </List>\n            </Segment>\n        </>\n\n    )\n})","import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Grid } from \"semantic-ui-react\";\nimport { useStore } from \"../../../app/stores/store\";\nimport LoadingComponent from \"../../../app/layout/LoadingComponents\";\nimport { observer } from \"mobx-react-lite\";\nimport ActivityDetailedHeader from \"./ActivityDeteledHeader\";\nimport ActivityDetailedInfo from \"./ActivityDetailedInfo\";\nimport ActivityDetailedChat from \"./ActivityDetailedChat\";\nimport ActivityDetailedSideBar from \"./ActivitySideBar\";\n\nexport default observer(function ActivityDetails() {\n  const { activityStore } = useStore();\n  const {\n    selectedActivity: activity,\n    loadActivity,\n    loadingInitial,\n    clearSelectedActivity,\n  } = activityStore;\n  const { id } = useParams<{ id: string }>();\n\n  useEffect(() => {\n    if (id) loadActivity(id);\n    return () => clearSelectedActivity();\n  }, [id, loadActivity, clearSelectedActivity]);\n\n  if (loadingInitial || !activity) return <LoadingComponent />;\n\n  return (\n    <Grid>\n      <Grid.Column width={10}>\n        <ActivityDetailedHeader activity={activity} />\n        <ActivityDetailedInfo activity={activity} />\n        <ActivityDetailedChat activityId={activity.id} />\n      </Grid.Column>\n      <Grid.Column width={6}>\n        <ActivityDetailedSideBar activity={activity} />\n      </Grid.Column>\n    </Grid>\n  );\n});\n","import React, { useState } from \"react\";\nimport { Button, Header, Segment } from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport ValidationErrors from \"./ValidationErrors\";\n\nexport default function TestErrors() {\n  const baseUrl = process.env.REACT_APP_API_URL;\n  const [errors, setErrors] = useState(null);\n\n  function handleNotFound() {\n    axios\n      .get(baseUrl + \"buggy/not-found\")\n      .catch((err) => console.log(err.response));\n  }\n\n  function handleBadRequest() {\n    axios\n      .get(baseUrl + \"buggy/bad-request\")\n      .catch((err) => console.log(err.response));\n  }\n\n  function handleServerError() {\n    axios\n      .get(baseUrl + \"buggy/server-error\")\n      .catch((err) => console.log(err.response));\n  }\n\n  function handleUnauthorised() {\n    axios\n      .get(baseUrl + \"buggy/unauthorised\")\n      .catch((err) => console.log(err.response));\n  }\n\n  function handleBadGuid() {\n    axios\n      .get(baseUrl + \"activities/notaguid\")\n      .catch((err) => console.log(err.response));\n  }\n\n  function handleValidationError() {\n    axios.post(baseUrl + \"activities\", {}).catch((err) => setErrors(err));\n  }\n\n  return (\n    <>\n      <Header as=\"h1\" content=\"Test Error component\" />\n      <Segment>\n        <Button.Group widths=\"7\">\n          <Button onClick={handleNotFound} content=\"Not Found\" basic primary />\n          <Button\n            onClick={handleBadRequest}\n            content=\"Bad Request\"\n            basic\n            primary\n          />\n          <Button\n            onClick={handleValidationError}\n            content=\"Validation Error\"\n            basic\n            primary\n          />\n          <Button\n            onClick={handleServerError}\n            content=\"Server Error\"\n            basic\n            primary\n          />\n          <Button\n            onClick={handleUnauthorised}\n            content=\"Unauthorised\"\n            basic\n            primary\n          />\n          <Button onClick={handleBadGuid} content=\"Bad Guid\" basic primary />\n        </Button.Group>\n      </Segment>\n      {errors && <ValidationErrors errors={errors} />}\n    </>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\n\nexport default function NotFound() {\n  return (\n    <Segment placeholder>\n      <Header icon>\n        <Icon name=\"search\" />\n        Oops - we've looked everywhere and could not find this.\n      </Header>\n      <Segment.Inline>\n        <Button as={Link} to=\"/activities\" primary>\n          Return to activities page\n        </Button>\n      </Segment.Inline>\n    </Segment>\n  );\n}\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Container, Header, Segment } from \"semantic-ui-react\";\nimport { useStore } from \"../../app/stores/store\";\n\nexport default observer(function ServerError() {\n  const { commonStore } = useStore();\n  return (\n    <Container>\n      <Header as=\"h1\" content=\"Server Error\" />\n      <Header sub as=\"h5\" color=\"red\" content={commonStore.error?.message} />\n      {commonStore.error?.details && (\n        <Segment>\n          <Header as=\"h4\" content=\"Stack trace\" color=\"teal\" />\n          <code style={{ marginTop: \"10px\" }}>{commonStore.error.details}</code>\n        </Segment>\n      )}\n    </Container>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Modal } from \"semantic-ui-react\";\nimport { useStore } from \"../../stores/store\";\n\nexport default observer(function ModalContainer (){\n    const {modalStore} = useStore();\n\n    return (\n        <Modal open={modalStore.modal.open} onClose={modalStore.closeModal} size='mini'>\n            <Modal.Content>\n                {modalStore.modal.body}\n            </Modal.Content>\n        </Modal>\n    )\n})","import React, { SyntheticEvent, useEffect } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { Tab, Grid, Header, Card, Image, TabProps } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { UserActivity } from \"../../app/models/profile\";\nimport { format } from \"date-fns\";\nimport { useStore } from \"../../app/stores/store\";\n\nconst panes = [\n  { menuItem: \"Future Events\", pane: { key: \"future\" } },\n  { menuItem: \"Past Events\", pane: { key: \"past\" } },\n  { menuItem: \"Hosting\", pane: { key: \"hosting\" } },\n];\n\nexport default observer(function ProfileActivities() {\n  const { profileStore } = useStore();\n  const { loadUserActivities, profile, loadingActivities, userActivities } =\n    profileStore;\n  useEffect(() => {\n    loadUserActivities(profile!.username);\n  }, [loadUserActivities, profile]);\n  const handleTabChange = (e: SyntheticEvent, data: TabProps) => {\n    loadUserActivities(\n      profile!.username,\n      panes[data.activeIndex as number].pane.key\n    );\n  };\n\n  return (\n    <Tab.Pane loading={loadingActivities}>\n      <Grid>\n        <Grid.Column width={16}>\n          <Header floated=\"left\" icon=\"calendar\" content={\"Activities\"} />\n        </Grid.Column>\n        <Grid.Column width={16}>\n          <Tab\n            panes={panes}\n            menu={{ secondary: true, pointing: true }}\n            onTabChange={(e, data) => handleTabChange(e, data)}\n          />\n          <br />\n          <Card.Group itemsPerRow={4}>\n            {userActivities.map((activity: UserActivity) => (\n              <Card\n                as={Link}\n                to={`/activities/${activity.id}`}\n                key={activity.id}\n              >\n                <Image\n                  src={`/assets/categoryImages/${activity.category}.jpg`}\n                  style={{ minHeight: 100, objectFit: \"cover\" }}\n                />\n                <Card.Content>\n                  <Card.Header textAlign=\"center\">{activity.title}</Card.Header>\n                  <Card.Meta textAlign=\"center\">\n                    <div>{format(new Date(activity.date), \"do LLL\")}</div>\n                    <div>{format(new Date(activity.date), \"h:mm a\")}</div>\n                  </Card.Meta>\n                </Card.Content>\n              </Card>\n            ))}\n          </Card.Group>\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Card, Grid, Header, Tab } from \"semantic-ui-react\";\nimport { useStore } from \"../../app/stores/store\";\nimport ProfileCard from \"./ProfileCard\";\n\nexport default observer(function ProfileFollowings() {\n  const { profileStore } = useStore();\n  const { profile, followings, loadingFollowings, activeTab } = profileStore;\n\n  return (\n    <Tab.Pane loagind={loadingFollowings}>\n      <Grid.Column width={16}>\n        <Header\n          floated=\"left\"\n          icon=\"user\"\n          content={\n            activeTab === 3\n              ? `People following ${profile?.displayName}`\n              : `People ${profile?.displayName} is following`\n          }\n        />\n      </Grid.Column>\n      <Grid.Column width={16}>\n        <Card.Group itemsPerRow={4}>\n          {followings.map((profile) => (\n            <ProfileCard key={profile.username} profile={profile} />\n          ))}\n        </Card.Group>\n      </Grid.Column>\n    </Tab.Pane>\n  );\n});\n","import React from \"react\";\nimport { Cropper } from \"react-cropper\";\nimport 'cropperjs/dist/cropper.css';\n\ninterface Props {\n    imagePreview: string;\n    setCropper: (cropper: Cropper) => void;\n}\n\nexport default function PhotoWidgetCropper({imagePreview, setCropper}: Props){\n    return(\n        <Cropper \n            src={imagePreview}\n            style={{height: 200, width: '100%'}}\n            initialAspectRatio={1}\n            aspectRatio={1}\n            preview='.img-preview'\n            guides={false}\n            viewMode={1}\n            autoCropArea={1}\n            background={false}\n            onInitialized={cropper => setCropper(cropper)}\n        />\n    )\n}\n","import React, {useCallback} from 'react'\nimport {useDropzone} from 'react-dropzone'\nimport { Header, Icon } from 'semantic-ui-react'\n\ninterface Props {\n  setFiles: (files: any) => void;\n}\n\nexport default function PhotoWidgetDropzone({setFiles}: Props) {\n  const dzStyles = {\n    border: 'dashed 3px #eee',\n    borderColor: '#eee',\n    borderRadius: '5px',\n    paddingTop: '30px',\n    textAlign: 'center' as 'center',\n    height: 200\n  }\n\n  const dzActive = {\n    borderColor: 'green'\n  }\n\n  const onDrop = useCallback(acceptedFiles => {\n    setFiles(acceptedFiles.map((file: any) => Object.assign(file, {\n      preview: URL.createObjectURL(file)\n    })))\n  }, [setFiles])\n  const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\n\n  return (\n    <div {...getRootProps()} style={isDragActive ? {...dzStyles, ...dzActive}: dzStyles}>\n      <input {...getInputProps()} />\n      <Icon name='upload' size='huge' />\n      <Header content='Drop image here' />\n    </div>\n  )\n}","import React, { useEffect, useState } from \"react\";\nimport { Button, Grid, Header } from \"semantic-ui-react\";\nimport PhotoWidgetCropper from \"./PhotoWidgetCropper\";\nimport PhotoWidgetDropzone from \"./PhotoWidgetDropzone\";\n\ninterface Props {\n    loading: boolean;\n    uploadPhoto: (file: Blob) => void;\n}\n\nexport default function PhotoUploadWidget({loading, uploadPhoto}: Props){\n    const [files, setFiles] = useState<any>([]);\n    const [cropper, setCropper] = useState<Cropper>();\n\n    function onCrop(){\n        if(cropper) {\n            cropper.getCroppedCanvas().toBlob(blob => uploadPhoto(blob!));\n        }\n    }\n\n    useEffect(() => {\n        return () => {\n            files.forEach((file: any) => URL.revokeObjectURL(file.preview))\n        }\n    }, [files])\n\n    return (\n        <Grid>\n            <Grid.Column width={4}>\n                <Header sub color='teal' content='Step 1 - Add Photo' />\n                <PhotoWidgetDropzone setFiles={setFiles}/>\n            </Grid.Column>\n            <Grid.Column width={1} />\n            <Grid.Column width={4}>\n                <Header sub color='teal' content='Step 2 - Resize image' />\n                {files && files.length > 0 && (\n                    <PhotoWidgetCropper setCropper={setCropper} imagePreview={files[0].preview} />\n                )}\n            </Grid.Column>\n            <Grid.Column width={1} />\n            <Grid.Column width={4}>\n                <Header sub color='teal' content='Step 3 - Preview & Upload' />\n                {files && files.length > 0 && \n                    <>\n                    <div className='img-preview' style={{minHeight: 200, overflow: 'hidden'}} />\n                    <Button.Group widths={2}>\n                        <Button loading={loading} onClick={onCrop} positive icon='check'/>\n                        <Button disabled={loading} onClick={() => setFiles([])} icon='close'/>\n                    </Button.Group>\n                </>}\n                \n            </Grid.Column>\n        </Grid>\n        \n    )\n}","import { observer } from \"mobx-react-lite\";\nimport React, { SyntheticEvent } from \"react\";\nimport { useState } from \"react\";\nimport { Card, Header, Tab, Image, Grid, Button } from \"semantic-ui-react\";\nimport PhotoUploadWidget from \"../../app/commom/imageUpload/PhotoUploadWiget\";\nimport { Photo, Profile } from \"../../app/models/profile\";\nimport { useStore } from \"../../app/stores/store\";\n\ninterface Props{\n    profile: Profile\n}\n\nexport default observer(function ProfilePhotos({profile}: Props){\n    const {profileStore: {isCurrentUser, uploadPhoto, \n        uploading, loading, setMainPhoto, deletePhoto}} = useStore();\n    const [addPhotoMode, setAddPhotoMode] = useState(false);\n    const [target, setTarget] = useState('');\n\n    function handlePhotoUpload(file: Blob) {\n        uploadPhoto(file).then(() => setAddPhotoMode(false));\n    }\n\n    function handleSetMainPhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>) {\n       setTarget(e.currentTarget.name);\n       setMainPhoto(photo);\n    }\n\n    function handleDeletePhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>) {\n        setTarget(e.currentTarget.name);\n        deletePhoto(photo);\n    }\n\n    return(\n        <Tab.Pane>\n            <Grid>\n                <Grid.Column width={16}>\n                    <Header floated='left' icon='image' content='Photos' />\n                    {isCurrentUser && (\n                        <Button floated='right' \n                            basic content={addPhotoMode ? 'Cancel' : 'Add Photo'}\n                            onClick={() => setAddPhotoMode(!addPhotoMode)}\n                        />\n                    )}\n                </Grid.Column>\n                <Grid.Column width={16}>\n                     {addPhotoMode ? (\n                         <PhotoUploadWidget uploadPhoto={handlePhotoUpload} loading={uploading} />\n                     ): (\n                        <Card.Group itemsPerRow={5}>\n                        {profile.photos?.map(photo => (\n                            <Card key={photo.id}>\n                                <Image src={photo.url} />\n                                {isCurrentUser && (\n                                    <Button.Group fluid widths={2}>\n                                        <Button \n                                            basic\n                                            color='green'\n                                            content='Main'\n                                            name={'main' + photo.id}\n                                            disabled={photo.isMain}\n                                            loading={target === 'main' + photo.id && loading}\n                                            onClick={e => handleSetMainPhoto(photo, e)}\n                                        />\n                                        <Button \n                                            basic \n                                            color='red' \n                                            icon='trash' \n                                            loading={target === photo.id && loading}\n                                            onClick={e => handleDeletePhoto(photo, e)}\n                                            disabled={photo.isMain}\n                                            name={photo.id}\n                                        />\n                                    </Button.Group>    \n                                )}\n                            </Card>\n                        ))}\n                        </Card.Group>       \n                     )}   \n                </Grid.Column>\n            </Grid>\n        </Tab.Pane>\n    )\n})","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Tab } from \"semantic-ui-react\";\nimport { Profile } from \"../../app/models/profile\";\nimport { useStore } from \"../../app/stores/store\";\nimport ProfileActivities from \"./ProfileActivities\";\nimport ProfileFollowing from \"./ProfileFollowing\";\nimport ProfilePhotos from \"./ProfilePhotos\";\n\ninterface Props {\n  profile: Profile;\n}\n\nexport default observer(function ProfileConten({ profile }: Props) {\n  const { profileStore } = useStore();\n\n  const panes = [\n    { menuItem: \"About\", render: () => <Tab.Pane>About Content</Tab.Pane> },\n    { menuItem: \"Photos\", render: () => <ProfilePhotos profile={profile} /> },\n    { menuItem: \"Events\", render: () => <ProfileActivities /> },\n    { menuItem: \"Followers\", render: () => <ProfileFollowing /> },\n    { menuItem: \"Following\", render: () => <ProfileFollowing /> },\n  ];\n  return (\n    <Tab\n      menu={{ fluid: true, vertical: true }}\n      menuPosition=\"right\"\n      panes={panes}\n      onTabChange={(e, data) => profileStore.setActiveTab(data.activeIndex)}\n    />\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport {\n  Divider,\n  Grid,\n  Header,\n  Item,\n  Segment,\n  Statistic,\n} from \"semantic-ui-react\";\nimport { Profile } from \"../../app/models/profile\";\nimport FollowButton from \"./FollowButton\";\n\ninterface Props {\n  profile: Profile;\n}\n\nexport default observer(function ProfileHeader({ profile }: Props) {\n  return (\n    <Segment>\n      <Grid>\n        <Grid.Column width={12}>\n          <Item.Group>\n            <Item>\n              <Item.Image\n                avatar\n                size=\"small\"\n                src={profile.image || \"/assets/user.png\"}\n              />\n              <Item.Content verticalAlign=\"middle\">\n                <Header as=\"h1\" content={profile.displayName} />\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Grid.Column>\n        <Grid.Column width={4}>\n          <Statistic.Group widths={2}>\n            <Statistic label=\"Followers\" value={profile.followersCount} />\n            <Statistic label=\"Following\" value={profile.followingCount} />\n          </Statistic.Group>\n          <Divider />\n          <FollowButton profile={profile}/>\n        </Grid.Column>\n      </Grid>\n    </Segment>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Grid } from \"semantic-ui-react\";\nimport LoadingComponent from \"../../app/layout/LoadingComponents\";\nimport { useStore } from \"../../app/stores/store\";\nimport ProfileConten from \"./ProfileContent\";\nimport ProfileHeader from \"./ProfileHeader\";\n\nexport default observer(function ProfilePage() {\n  const { username } = useParams<{ username: string }>();\n  const { profileStore } = useStore();\n  const { loadingProfile, loadProfile, profile, setActiveTab } = profileStore;\n\n  useEffect(() => {\n    loadProfile(username);\n    return () => {\n      setActiveTab(0);\n    };\n  }, [loadProfile, username, setActiveTab]);\n\n  if (loadingProfile) return <LoadingComponent content=\"Loading profile...\" />;\n\n  return (\n    <Grid>\n      <Grid.Column width={16}>\n        {profile && (\n          <>\n            <ProfileHeader profile={profile} />\n            <ProfileConten profile={profile} />\n          </>\n        )}\n      </Grid.Column>\n    </Grid>\n  );\n});\n","import { Redirect, RouteComponentProps, RouteProps } from \"react-router\";\nimport { Route } from \"react-router-dom\";\nimport { useStore } from \"../stores/store\";\n\ninterface Props extends RouteProps {\n  component:\n    | React.ComponentType<RouteComponentProps<any>>\n    | React.ComponentType<any>;\n}\n\nexport default function PrivateRoute({ component: Component, ...rest }: Props) {\n  const {\n    userStore: { isLoggedIn },\n  } = useStore();\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        isLoggedIn ? <Component {...props} /> : <Redirect to=\"/\" />\n      }\n    />\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport NavBar from \"./NavBar\";\nimport ActivityDashboard from \"../../features/activities/dashboard/ActivityDashboard\";\nimport { observer } from \"mobx-react-lite\";\nimport { Route, Switch, useLocation } from \"react-router-dom\";\nimport HomePage from \"../../features/home/HomePage\";\nimport ActivityForm from \"../../features/activities/form/ActivityForm\";\nimport ActivityDetails from \"../../features/activities/details/ActivityDetails\";\nimport TestErrors from \"../../features/errors/TestError\";\nimport { ToastContainer } from \"react-toastify\";\nimport NotFound from \"../../features/errors/NotFound\";\nimport ServerError from \"../../features/errors/ServerError\";\nimport { useStore } from \"../stores/store\";\nimport LoadingComponent from \"./LoadingComponents\";\nimport ModalContainer from \"../commom/modals/ModalContainer\";\nimport ProfilePage from \"../../features/profiles/ProfilePage\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nfunction App() {\n  const location = useLocation();\n  const { commonStore, userStore } = useStore();\n\n  useEffect(() => {\n    if (commonStore.token) {\n      userStore.getUser().finally(() => commonStore.setAppLoaded());\n    } else {\n      commonStore.setAppLoaded();\n    }\n  }, [commonStore, userStore]);\n\n  if (!commonStore.appLoaded)\n    return <LoadingComponent content=\"Loding App...\" />;\n\n  return (\n    <>\n      <ToastContainer position=\"bottom-right\" hideProgressBar />\n      <ModalContainer />\n      <Route exact path=\"/\" component={HomePage} />\n      <Route\n        path={`/(.+)`}\n        render={() => (\n          <>\n            <NavBar />\n            <Container style={{ marginTop: \"7em\" }}>\n              <Switch>\n                <PrivateRoute\n                  exact\n                  path=\"/activities\"\n                  component={ActivityDashboard}\n                />\n                <PrivateRoute\n                  path=\"/activities/:id\"\n                  component={ActivityDetails}\n                />\n                <PrivateRoute\n                  key={location.key}\n                  path={[\"/createActivity\", \"/manage/:id\"]}\n                  component={ActivityForm}\n                />\n                <PrivateRoute\n                  path=\"/profiles/:username\"\n                  component={ProfilePage}\n                />\n                <Route path=\"/errors\" component={TestErrors} />\n                <Route path=\"/server-error\" component={ServerError} />\n                <Route component={NotFound} />\n              </Switch>\n            </Container>\n          </>\n        )}\n      />\n    </>\n  );\n}\n\nexport default observer(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"react-calendar/dist/Calendar.css\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./app/layout/styles.css\";\nimport App from \"./app/layout/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { store, StoreContext } from \"./app/stores/store\";\nimport { createBrowserHistory } from \"history\";\nimport { Router } from \"react-router-dom\";\nimport ScrollToTop from \"./app/layout/ScrollToTop\";\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <StoreContext.Provider value={store}>\n    <Router history={history}>\n      <ScrollToTop />\n      <App />\n    </Router>\n  </StoreContext.Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}